State 128 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | CMD

    4 CMD: CMD_LET ';'
    5    | CMD_VAR ';'
    6    | CMD_CONST ';'
    7    | CMD_IF
    8    | CMD_FUNC
    9    | CMD_RET ';'
   10    | CMD_RET E ';'
   11    | E CMD_ASM ';'
   12    | PRINT E ';'
   13    | CMD_WHILE
   14    | CMD_FOR
   15    | E ';'
   16    | '{' EMPILHA_TS CMDs '}'

   17 EMPILHA_TS: /* empty */

   18 CMD_ASM: ASM ASM_STRING '}'

   19 ASM_STRING: ASM_WORD ASM_STRING
   20           | /* empty */

   21 $@1: /* empty */

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   23 CMD_RET: RETURN

   24 LISTA_PARAMs: LISTA_PARAMs ',' PARAM
   25             | PARAM EMPILHA_TS

   26 PARAM: ID
   27      | ID '=' E
   28      | ID '=' OBJ

   29 CMD_WHILE: WHILE '(' E ')' CMD

   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E REDUCE
   31        | FOR '(' PRIM_E ';' E ';' E ')' CMD

   32 PRIM_E: CMD_LET
   33       | CMD_VAR
   34       | CMD_CONST
   35       | E

   36 CMD_IF: IF '(' E ')' CMD
   37       | IF '(' E ')' CMD ELSE CMD

   38 CMD_LET: LET VARs_LET

   39 CMD_VAR: VAR VARs_VAR

   40 CMD_CONST: CONST VARs_CONST

   41 VARs_LET: VAR_LET ',' VARs_LET
   42         | VAR_LET

   43 VARs_VAR: VAR_VAR ',' VARs_VAR
   44         | VAR_VAR

   45 VARs_CONST: VAR_CONST ',' VARs_CONST
   46           | VAR_CONST

   47 VAR_LET: ID
   48        | ID '=' E
   49        | ID '=' OBJ

   50 VAR_VAR: ID
   51        | ID '=' E
   52        | ID '=' OBJ

   53 VAR_CONST: ID '=' E
   54          | ID '=' OBJ

   55 LVALUEPROP: E '[' E ']'
   56           | E '.' ID

   57 E: ID '=' E
   58  | ID MAIS_IGUAL E
   59  | ID MAIS_MAIS
   60  | LVALUEPROP '=' E
   61  | LVALUEPROP MAIS_IGUAL E
   62  | LVALUEPROP MAIS_MAIS
   63  | E '<' E
   64  | E '>' E
   65  | E AND E
   66  | E OR E
   67  | E ME_IG E
   68  | E MA_IG E
   69  | E DIF E
   70  | E IGUAL E
   71  | E '+' E
   72  | E '-' E
   73  | E '*' E
   74  | E '/' E
   75  | E '%' E
   76  | CDOUBLE
   77  | '+' CDOUBLE
   78  | '-' CDOUBLE
   79  | CINT
   80  | '+' CINT
   81  | '-' CINT
   82  | CSTRING
   83  | '{' '}'
   84  | '[' ']'
   85  | ID
   86  | LVALUEPROP
   87  | TRUE_TK
   88  | FALSE_TK
   89  | '(' E ')'
   90  | E '(' LISTA_ARGs ')'
   91  | '(' OBJ ')'
   92  | '[' LISTA_ELEMS ']'
   93  | FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}'
   94  | ID SETA EMPILHA_TS E
   95  | ID SETA EMPILHA_TS '{' CMDs '}'
   96  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E
   97  | '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
   98  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E
   99  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

  100 LISTA_ARGs: ARGs
  101           | /* empty */

  102 ARGs: ARGs ',' ARG
  103     | ARG

  104 ARG: E
  105    | OBJ

  106 OBJ: '{' LISTA_CAMPOS '}'

  107 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO
  108             | CAMPO

  109 CAMPO: ID ':' E
  110      | ID ':' OBJ

  111 LISTA_ELEMS: LISTA_ELEMS ',' ELEM
  112            | ELEM

  113 ELEM: E
  114     | OBJ


Terminals, with rules where they appear

$end (0) 0
'%' (37) 75
'(' (40) 22 29 30 31 36 37 89 90 91 93 96 97 98 99
')' (41) 22 29 30 31 36 37 89 90 91 93
'*' (42) 73
'+' (43) 71 77 80
',' (44) 24 41 43 45 102 107 111
'-' (45) 72 78 81
'.' (46) 56
'/' (47) 74
':' (58) 109 110
';' (59) 4 5 6 9 10 11 12 15 30 31
'<' (60) 63
'=' (61) 27 28 48 49 51 52 53 54 57 60
'>' (62) 64
'[' (91) 55 84 92
']' (93) 55 84 92
'{' (123) 16 22 83 93 95 97 99 106
'}' (125) 16 18 22 83 93 95 97 99 106
error (256)
ID (258) 22 26 27 28 47 48 49 50 51 52 53 54 56 57 58 59 85 94 95 109
    110
PRINT (259) 12
FOR (260) 30 31
WHILE (261) 29
ASM (262) 18
ASM_WORD (263) 19
LET (264) 38
VAR (265) 39
CONST (266) 40
FUNCTION (267) 22 93
RETURN (268) 23
TRUE_TK (269) 87
FALSE_TK (270) 88
CDOUBLE (271) 76 77 78
CSTRING (272) 82
CINT (273) 79 80 81
PARENTESES_FUNCAO (274) 96 97 98 99
SETA (275) 94 95 96 97 98 99
MAIS_IGUAL (276) 58 61
MAIS_MAIS (277) 59 62
IGUAL (278) 70
DIF (279) 69
MA_IG (280) 68
ME_IG (281) 67
OR (282) 66
AND (283) 65
IF (284) 36 37
REDUCE (285) 30
ELSE (286) 37


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
S (51)
    on left: 1, on right: 0
CMDs (52)
    on left: 2 3, on right: 1 2 16 22 93 95 97 99
CMD (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3 29 31
    36 37
EMPILHA_TS (54)
    on left: 17, on right: 16 25 94 95 96 97
CMD_ASM (55)
    on left: 18, on right: 11
ASM_STRING (56)
    on left: 19 20, on right: 18 19
CMD_FUNC (57)
    on left: 22, on right: 8
$@1 (58)
    on left: 21, on right: 22
CMD_RET (59)
    on left: 23, on right: 9 10
LISTA_PARAMs (60)
    on left: 24 25, on right: 22 24 93 98 99
PARAM (61)
    on left: 26 27 28, on right: 24 25
CMD_WHILE (62)
    on left: 29, on right: 13
CMD_FOR (63)
    on left: 30 31, on right: 14
PRIM_E (64)
    on left: 32 33 34 35, on right: 30 31
CMD_IF (65)
    on left: 36 37, on right: 7
CMD_LET (66)
    on left: 38, on right: 4 32
CMD_VAR (67)
    on left: 39, on right: 5 33
CMD_CONST (68)
    on left: 40, on right: 6 34
VARs_LET (69)
    on left: 41 42, on right: 38 41
VARs_VAR (70)
    on left: 43 44, on right: 39 43
VARs_CONST (71)
    on left: 45 46, on right: 40 45
VAR_LET (72)
    on left: 47 48 49, on right: 41 42
VAR_VAR (73)
    on left: 50 51 52, on right: 43 44
VAR_CONST (74)
    on left: 53 54, on right: 45 46
LVALUEPROP (75)
    on left: 55 56, on right: 60 61 62 86
E (76)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99, on right: 10 11 12 15 27 29 30 31 35 36 37 48 51 53
    55 56 57 58 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 89 90
    94 96 98 104 109 113
LISTA_ARGs (77)
    on left: 100 101, on right: 90
ARGs (78)
    on left: 102 103, on right: 100 102
ARG (79)
    on left: 104 105, on right: 102 103
OBJ (80)
    on left: 106, on right: 28 49 52 54 91 105 110 114
LISTA_CAMPOS (81)
    on left: 107 108, on right: 106 107
CAMPO (82)
    on left: 109 110, on right: 107 108
LISTA_ELEMS (83)
    on left: 111 112, on right: 92 111
ELEM (84)
    on left: 113 114, on right: 111 112


state 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    S           go to state 21
    CMDs        go to state 22
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 1

   57 E: ID . '=' E
   58  | ID . MAIS_IGUAL E
   59  | ID . MAIS_MAIS
   85  | ID .
   94  | ID . SETA EMPILHA_TS E
   95  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 34
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    $default  reduce using rule 85 (E)


state 2

   12 CMD: PRINT . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 40


state 3

   30 CMD_FOR: FOR . '(' PRIM_E ';' E ';' E ')' E REDUCE
   31        | FOR . '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 41


state 4

   29 CMD_WHILE: WHILE . '(' E ')' CMD

    '('  shift, and go to state 42


state 5

   38 CMD_LET: LET . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 44
    VAR_LET   go to state 45


state 6

   39 CMD_VAR: VAR . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 47
    VAR_VAR   go to state 48


state 7

   40 CMD_CONST: CONST . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 50
    VAR_CONST   go to state 51


state 8

   22 CMD_FUNC: FUNCTION . ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   93 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID   shift, and go to state 52
    '('  shift, and go to state 53


state 9

   23 CMD_RET: RETURN .

    $default  reduce using rule 23 (CMD_RET)


state 10

   87 E: TRUE_TK .

    $default  reduce using rule 87 (E)


state 11

   88 E: FALSE_TK .

    $default  reduce using rule 88 (E)


state 12

   76 E: CDOUBLE .

    $default  reduce using rule 76 (E)


state 13

   82 E: CSTRING .

    $default  reduce using rule 82 (E)


state 14

   79 E: CINT .

    $default  reduce using rule 79 (E)


state 15

   36 CMD_IF: IF . '(' E ')' CMD
   37       | IF . '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 54


state 16

   77 E: '+' . CDOUBLE
   80  | '+' . CINT

    CDOUBLE  shift, and go to state 55
    CINT     shift, and go to state 56


state 17

   78 E: '-' . CDOUBLE
   81  | '-' . CINT

    CDOUBLE  shift, and go to state 57
    CINT     shift, and go to state 58


state 18

   84 E: '[' . ']'
   92  | '[' . LISTA_ELEMS ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59
    ']'       shift, and go to state 60

    LVALUEPROP   go to state 32
    E            go to state 61
    OBJ          go to state 62
    LISTA_ELEMS  go to state 63
    ELEM         go to state 64


state 19

   89 E: '(' . E ')'
   91  | '(' . OBJ ')'
   96  | '(' . PARENTESES_FUNCAO SETA EMPILHA_TS E
   97  | '(' . PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
   98  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA E
   99  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

    ID                 shift, and go to state 65
    FUNCTION           shift, and go to state 38
    TRUE_TK            shift, and go to state 10
    FALSE_TK           shift, and go to state 11
    CDOUBLE            shift, and go to state 12
    CSTRING            shift, and go to state 13
    CINT               shift, and go to state 14
    PARENTESES_FUNCAO  shift, and go to state 66
    '+'                shift, and go to state 16
    '-'                shift, and go to state 17
    '['                shift, and go to state 18
    '('                shift, and go to state 19
    '{'                shift, and go to state 59

    LISTA_PARAMs  go to state 67
    PARAM         go to state 68
    LVALUEPROP    go to state 32
    E             go to state 69
    OBJ           go to state 70


state 20

   16 CMD: '{' . EMPILHA_TS CMDs '}'
   83 E: '{' . '}'

    '}'  shift, and go to state 71

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 72


state 21

    0 $accept: S . $end

    $end  shift, and go to state 73


state 22

    1 S: CMDs .
    2 CMDs: CMDs . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    $default  reduce using rule 1 (S)

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 23

    3 CMDs: CMD .

    $default  reduce using rule 3 (CMDs)


state 24

    8 CMD: CMD_FUNC .

    $default  reduce using rule 8 (CMD)


state 25

    9 CMD: CMD_RET . ';'
   10    | CMD_RET . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 75
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 76


state 26

   13 CMD: CMD_WHILE .

    $default  reduce using rule 13 (CMD)


state 27

   14 CMD: CMD_FOR .

    $default  reduce using rule 14 (CMD)


state 28

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


state 29

    4 CMD: CMD_LET . ';'

    ';'  shift, and go to state 77


state 30

    5 CMD: CMD_VAR . ';'

    ';'  shift, and go to state 78


state 31

    6 CMD: CMD_CONST . ';'

    ';'  shift, and go to state 79


state 32

   60 E: LVALUEPROP . '=' E
   61  | LVALUEPROP . MAIS_IGUAL E
   62  | LVALUEPROP . MAIS_MAIS
   86  | LVALUEPROP .

    '='         shift, and go to state 80
    MAIS_IGUAL  shift, and go to state 81
    MAIS_MAIS   shift, and go to state 82

    $default  reduce using rule 86 (E)


state 33

   11 CMD: E . CMD_ASM ';'
   15    | E . ';'
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 83
    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ';'    shift, and go to state 100

    CMD_ASM  go to state 101


state 34

   57 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 102


state 35

   94 E: ID SETA . EMPILHA_TS E
   95  | ID SETA . EMPILHA_TS '{' CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 103


state 36

   58 E: ID MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 104


state 37

   59 E: ID MAIS_MAIS .

    $default  reduce using rule 59 (E)


state 38

   93 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 53


state 39

   83 E: '{' . '}'

    '}'  shift, and go to state 71


state 40

   12 CMD: PRINT E . ';'
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ';'    shift, and go to state 105


state 41

   30 CMD_FOR: FOR '(' . PRIM_E ';' E ';' E ')' E REDUCE
   31        | FOR '(' . PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 1
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    PRIM_E      go to state 106
    CMD_LET     go to state 107
    CMD_VAR     go to state 108
    CMD_CONST   go to state 109
    LVALUEPROP  go to state 32
    E           go to state 110


state 42

   29 CMD_WHILE: WHILE '(' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 111


state 43

   47 VAR_LET: ID .
   48        | ID . '=' E
   49        | ID . '=' OBJ

    '='  shift, and go to state 112

    $default  reduce using rule 47 (VAR_LET)


state 44

   38 CMD_LET: LET VARs_LET .

    $default  reduce using rule 38 (CMD_LET)


state 45

   41 VARs_LET: VAR_LET . ',' VARs_LET
   42         | VAR_LET .

    ','  shift, and go to state 113

    $default  reduce using rule 42 (VARs_LET)


state 46

   50 VAR_VAR: ID .
   51        | ID . '=' E
   52        | ID . '=' OBJ

    '='  shift, and go to state 114

    $default  reduce using rule 50 (VAR_VAR)


state 47

   39 CMD_VAR: VAR VARs_VAR .

    $default  reduce using rule 39 (CMD_VAR)


state 48

   43 VARs_VAR: VAR_VAR . ',' VARs_VAR
   44         | VAR_VAR .

    ','  shift, and go to state 115

    $default  reduce using rule 44 (VARs_VAR)


state 49

   53 VAR_CONST: ID . '=' E
   54          | ID . '=' OBJ

    '='  shift, and go to state 116


state 50

   40 CMD_CONST: CONST VARs_CONST .

    $default  reduce using rule 40 (CMD_CONST)


state 51

   45 VARs_CONST: VAR_CONST . ',' VARs_CONST
   46           | VAR_CONST .

    ','  shift, and go to state 117

    $default  reduce using rule 46 (VARs_CONST)


state 52

   22 CMD_FUNC: FUNCTION ID . $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 21 ($@1)

    $@1  go to state 118


state 53

   93 E: FUNCTION '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 119

    LISTA_PARAMs  go to state 120
    PARAM         go to state 68


state 54

   36 CMD_IF: IF '(' . E ')' CMD
   37       | IF '(' . E ')' CMD ELSE CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 121


state 55

   77 E: '+' CDOUBLE .

    $default  reduce using rule 77 (E)


state 56

   80 E: '+' CINT .

    $default  reduce using rule 80 (E)


state 57

   78 E: '-' CDOUBLE .

    $default  reduce using rule 78 (E)


state 58

   81 E: '-' CINT .

    $default  reduce using rule 81 (E)


state 59

   83 E: '{' . '}'
  106 OBJ: '{' . LISTA_CAMPOS '}'

    ID   shift, and go to state 122
    '}'  shift, and go to state 71

    LISTA_CAMPOS  go to state 123
    CAMPO         go to state 124


state 60

   84 E: '[' ']' .

    $default  reduce using rule 84 (E)


state 61

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
  113 ELEM: E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 113 (ELEM)


state 62

  114 ELEM: OBJ .

    $default  reduce using rule 114 (ELEM)


state 63

   92 E: '[' LISTA_ELEMS . ']'
  111 LISTA_ELEMS: LISTA_ELEMS . ',' ELEM

    ','  shift, and go to state 125
    ']'  shift, and go to state 126


state 64

  112 LISTA_ELEMS: ELEM .

    $default  reduce using rule 112 (LISTA_ELEMS)


state 65

   26 PARAM: ID .
   27      | ID . '=' E
   28      | ID . '=' OBJ
   57 E: ID . '=' E
   58  | ID . MAIS_IGUAL E
   59  | ID . MAIS_MAIS
   85  | ID .
   94  | ID . SETA EMPILHA_TS E
   95  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 127
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    PARENTESES_FUNCAO  reduce using rule 26 (PARAM)
    ','                reduce using rule 26 (PARAM)
    $default           reduce using rule 85 (E)


state 66

   96 E: '(' PARENTESES_FUNCAO . SETA EMPILHA_TS E
   97  | '(' PARENTESES_FUNCAO . SETA '{' EMPILHA_TS CMDs '}'

    SETA  shift, and go to state 128


state 67

   24 LISTA_PARAMs: LISTA_PARAMs . ',' PARAM
   98 E: '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA E
   99  | '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA '{' CMDs '}'

    PARENTESES_FUNCAO  shift, and go to state 129
    ','                shift, and go to state 130


state 68

   25 LISTA_PARAMs: PARAM . EMPILHA_TS

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 131


state 69

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   89  | '(' E . ')'
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ')'    shift, and go to state 132


state 70

   91 E: '(' OBJ . ')'

    ')'  shift, and go to state 133


state 71

   83 E: '{' '}' .

    $default  reduce using rule 83 (E)


state 72

   16 CMD: '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 134
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 73

    0 $accept: S $end .

    $default  accept


state 74

    2 CMDs: CMDs CMD .

    $default  reduce using rule 2 (CMDs)


state 75

    9 CMD: CMD_RET ';' .

    $default  reduce using rule 9 (CMD)


state 76

   10 CMD: CMD_RET E . ';'
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ';'    shift, and go to state 135


state 77

    4 CMD: CMD_LET ';' .

    $default  reduce using rule 4 (CMD)


state 78

    5 CMD: CMD_VAR ';' .

    $default  reduce using rule 5 (CMD)


state 79

    6 CMD: CMD_CONST ';' .

    $default  reduce using rule 6 (CMD)


state 80

   60 E: LVALUEPROP '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 136


state 81

   61 E: LVALUEPROP MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 137


state 82

   62 E: LVALUEPROP MAIS_MAIS .

    $default  reduce using rule 62 (E)


state 83

   18 CMD_ASM: ASM . ASM_STRING '}'

    ASM_WORD  shift, and go to state 138

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 139


state 84

   63 E: E '<' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 140


state 85

   64 E: E '>' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 141


state 86

   70 E: E IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 142


state 87

   69 E: E DIF . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 143


state 88

   68 E: E MA_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 144


state 89

   67 E: E ME_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 145


state 90

   66 E: E OR . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 146


state 91

   65 E: E AND . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 147


state 92

   71 E: E '+' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 148


state 93

   72 E: E '-' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 149


state 94

   73 E: E '*' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 150


state 95

   74 E: E '/' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 151


state 96

   75 E: E '%' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 152


state 97

   55 LVALUEPROP: E '[' . E ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 153


state 98

   90 E: E '(' . LISTA_ARGs ')'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    $default  reduce using rule 101 (LISTA_ARGs)

    LVALUEPROP  go to state 32
    E           go to state 154
    LISTA_ARGs  go to state 155
    ARGs        go to state 156
    ARG         go to state 157
    OBJ         go to state 158


state 99

   56 LVALUEPROP: E '.' . ID

    ID  shift, and go to state 159


state 100

   15 CMD: E ';' .

    $default  reduce using rule 15 (CMD)


state 101

   11 CMD: E CMD_ASM . ';'

    ';'  shift, and go to state 160


state 102

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   57 E: ID '=' E .
   63  | E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 57 (E)

    Conflict between rule 57 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 57 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 57 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 57 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 57 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 57 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 57 and token OR resolved as shift ('=' < OR).
    Conflict between rule 57 and token AND resolved as shift ('=' < AND).
    Conflict between rule 57 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 57 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 57 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 57 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 57 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 57 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 57 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 57 and token '.' resolved as shift ('=' < '.').


state 103

   94 E: ID SETA EMPILHA_TS . E
   95  | ID SETA EMPILHA_TS . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 161

    LVALUEPROP  go to state 32
    E           go to state 162


state 104

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   58 E: ID MAIS_IGUAL E .
   63  | E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 58 (E)

    Conflict between rule 58 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 58 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 58 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 58 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 58 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 58 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 58 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 58 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 58 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 58 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 58 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 58 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 58 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 58 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 58 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 58 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 105

   12 CMD: PRINT E ';' .

    $default  reduce using rule 12 (CMD)


state 106

   30 CMD_FOR: FOR '(' PRIM_E . ';' E ';' E ')' E REDUCE
   31        | FOR '(' PRIM_E . ';' E ';' E ')' CMD

    ';'  shift, and go to state 163


state 107

   32 PRIM_E: CMD_LET .

    $default  reduce using rule 32 (PRIM_E)


state 108

   33 PRIM_E: CMD_VAR .

    $default  reduce using rule 33 (PRIM_E)


state 109

   34 PRIM_E: CMD_CONST .

    $default  reduce using rule 34 (PRIM_E)


state 110

   35 PRIM_E: E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 35 (PRIM_E)


state 111

   29 CMD_WHILE: WHILE '(' E . ')' CMD
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ')'    shift, and go to state 164


state 112

   48 VAR_LET: ID '=' . E
   49        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 165
    OBJ         go to state 166


state 113

   41 VARs_LET: VAR_LET ',' . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 167
    VAR_LET   go to state 45


state 114

   51 VAR_VAR: ID '=' . E
   52        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 168
    OBJ         go to state 169


state 115

   43 VARs_VAR: VAR_VAR ',' . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 170
    VAR_VAR   go to state 48


state 116

   53 VAR_CONST: ID '=' . E
   54          | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 171
    OBJ         go to state 172


state 117

   45 VARs_CONST: VAR_CONST ',' . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 173
    VAR_CONST   go to state 51


state 118

   22 CMD_FUNC: FUNCTION ID $@1 . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 174


state 119

   26 PARAM: ID .
   27      | ID . '=' E
   28      | ID . '=' OBJ

    '='  shift, and go to state 175

    $default  reduce using rule 26 (PARAM)


state 120

   24 LISTA_PARAMs: LISTA_PARAMs . ',' PARAM
   93 E: FUNCTION '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 176
    ','  shift, and go to state 130


state 121

   36 CMD_IF: IF '(' E . ')' CMD
   37       | IF '(' E . ')' CMD ELSE CMD
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ')'    shift, and go to state 177


state 122

  109 CAMPO: ID . ':' E
  110      | ID . ':' OBJ

    ':'  shift, and go to state 178


state 123

  106 OBJ: '{' LISTA_CAMPOS . '}'
  107 LISTA_CAMPOS: LISTA_CAMPOS . ',' CAMPO

    '}'  shift, and go to state 179
    ','  shift, and go to state 180


state 124

  108 LISTA_CAMPOS: CAMPO .

    $default  reduce using rule 108 (LISTA_CAMPOS)


state 125

  111 LISTA_ELEMS: LISTA_ELEMS ',' . ELEM

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 61
    OBJ         go to state 62
    ELEM        go to state 181


state 126

   92 E: '[' LISTA_ELEMS ']' .

    $default  reduce using rule 92 (E)


state 127

   27 PARAM: ID '=' . E
   28      | ID '=' . OBJ
   57 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 182
    OBJ         go to state 183


state 128

   96 E: '(' PARENTESES_FUNCAO SETA . EMPILHA_TS E
   97  | '(' PARENTESES_FUNCAO SETA . '{' EMPILHA_TS CMDs '}'

    '{'  shift, and go to state 184

    '{'       [reduce using rule 17 (EMPILHA_TS)]
    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 185


state 129

   98 E: '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA E
   99  | '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA '{' CMDs '}'

    SETA  shift, and go to state 186


state 130

   24 LISTA_PARAMs: LISTA_PARAMs ',' . PARAM

    ID  shift, and go to state 119

    PARAM  go to state 187


state 131

   25 LISTA_PARAMs: PARAM EMPILHA_TS .

    $default  reduce using rule 25 (LISTA_PARAMs)


state 132

   89 E: '(' E ')' .

    $default  reduce using rule 89 (E)


state 133

   91 E: '(' OBJ ')' .

    $default  reduce using rule 91 (E)


state 134

    2 CMDs: CMDs . CMD
   16 CMD: '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 188

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 135

   10 CMD: CMD_RET E ';' .

    $default  reduce using rule 10 (CMD)


state 136

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   60 E: LVALUEPROP '=' E .
   63  | E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 60 (E)

    Conflict between rule 60 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 60 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 60 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 60 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 60 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 60 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 60 and token OR resolved as shift ('=' < OR).
    Conflict between rule 60 and token AND resolved as shift ('=' < AND).
    Conflict between rule 60 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 60 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 60 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 60 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 60 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 60 and token '.' resolved as shift ('=' < '.').


state 137

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   61 E: LVALUEPROP MAIS_IGUAL E .
   63  | E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 61 (E)

    Conflict between rule 61 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 61 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 61 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 61 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 61 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 61 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 61 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 61 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 61 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 61 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 61 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 61 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 61 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 61 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 61 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 61 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 138

   19 ASM_STRING: ASM_WORD . ASM_STRING

    ASM_WORD  shift, and go to state 138

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 189


state 139

   18 CMD_ASM: ASM ASM_STRING . '}'

    '}'  shift, and go to state 190


state 140

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   63  | E '<' E .
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 63 (E)

    Conflict between rule 63 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 63 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 63 and token IGUAL resolved as shift ('<' < IGUAL).
    Conflict between rule 63 and token DIF resolved as shift ('<' < DIF).
    Conflict between rule 63 and token MA_IG resolved as shift ('<' < MA_IG).
    Conflict between rule 63 and token ME_IG resolved as shift ('<' < ME_IG).
    Conflict between rule 63 and token OR resolved as shift ('<' < OR).
    Conflict between rule 63 and token AND resolved as shift ('<' < AND).
    Conflict between rule 63 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 63 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 63 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 63 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 63 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 63 and token '[' resolved as shift ('<' < '[').
    Conflict between rule 63 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 63 and token '.' resolved as shift ('<' < '.').


state 141

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   64  | E '>' E .
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 64 (E)

    Conflict between rule 64 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 64 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 64 and token IGUAL resolved as shift ('>' < IGUAL).
    Conflict between rule 64 and token DIF resolved as shift ('>' < DIF).
    Conflict between rule 64 and token MA_IG resolved as shift ('>' < MA_IG).
    Conflict between rule 64 and token ME_IG resolved as shift ('>' < ME_IG).
    Conflict between rule 64 and token OR resolved as shift ('>' < OR).
    Conflict between rule 64 and token AND resolved as shift ('>' < AND).
    Conflict between rule 64 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 64 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 64 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 64 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 64 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 64 and token '[' resolved as shift ('>' < '[').
    Conflict between rule 64 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 64 and token '.' resolved as shift ('>' < '.').


state 142

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   70  | E IGUAL E .
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 70 (E)

    Conflict between rule 70 and token '<' resolved as reduce ('<' < IGUAL).
    Conflict between rule 70 and token '>' resolved as reduce ('>' < IGUAL).
    Conflict between rule 70 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 70 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 70 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 70 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 70 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 70 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 70 and token '+' resolved as shift (IGUAL < '+').
    Conflict between rule 70 and token '-' resolved as shift (IGUAL < '-').
    Conflict between rule 70 and token '*' resolved as shift (IGUAL < '*').
    Conflict between rule 70 and token '/' resolved as shift (IGUAL < '/').
    Conflict between rule 70 and token '%' resolved as shift (IGUAL < '%').
    Conflict between rule 70 and token '[' resolved as shift (IGUAL < '[').
    Conflict between rule 70 and token '(' resolved as shift (IGUAL < '(').
    Conflict between rule 70 and token '.' resolved as shift (IGUAL < '.').


state 143

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   69  | E DIF E .
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 69 (E)

    Conflict between rule 69 and token '<' resolved as reduce ('<' < DIF).
    Conflict between rule 69 and token '>' resolved as reduce ('>' < DIF).
    Conflict between rule 69 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 69 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 69 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 69 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 69 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 69 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 69 and token '+' resolved as shift (DIF < '+').
    Conflict between rule 69 and token '-' resolved as shift (DIF < '-').
    Conflict between rule 69 and token '*' resolved as shift (DIF < '*').
    Conflict between rule 69 and token '/' resolved as shift (DIF < '/').
    Conflict between rule 69 and token '%' resolved as shift (DIF < '%').
    Conflict between rule 69 and token '[' resolved as shift (DIF < '[').
    Conflict between rule 69 and token '(' resolved as shift (DIF < '(').
    Conflict between rule 69 and token '.' resolved as shift (DIF < '.').


state 144

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   68  | E MA_IG E .
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 68 (E)

    Conflict between rule 68 and token '<' resolved as reduce ('<' < MA_IG).
    Conflict between rule 68 and token '>' resolved as reduce ('>' < MA_IG).
    Conflict between rule 68 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 68 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 68 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 68 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 68 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 68 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 68 and token '+' resolved as shift (MA_IG < '+').
    Conflict between rule 68 and token '-' resolved as shift (MA_IG < '-').
    Conflict between rule 68 and token '*' resolved as shift (MA_IG < '*').
    Conflict between rule 68 and token '/' resolved as shift (MA_IG < '/').
    Conflict between rule 68 and token '%' resolved as shift (MA_IG < '%').
    Conflict between rule 68 and token '[' resolved as shift (MA_IG < '[').
    Conflict between rule 68 and token '(' resolved as shift (MA_IG < '(').
    Conflict between rule 68 and token '.' resolved as shift (MA_IG < '.').


state 145

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   67  | E ME_IG E .
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 67 (E)

    Conflict between rule 67 and token '<' resolved as reduce ('<' < ME_IG).
    Conflict between rule 67 and token '>' resolved as reduce ('>' < ME_IG).
    Conflict between rule 67 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 67 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 67 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 67 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 67 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 67 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 67 and token '+' resolved as shift (ME_IG < '+').
    Conflict between rule 67 and token '-' resolved as shift (ME_IG < '-').
    Conflict between rule 67 and token '*' resolved as shift (ME_IG < '*').
    Conflict between rule 67 and token '/' resolved as shift (ME_IG < '/').
    Conflict between rule 67 and token '%' resolved as shift (ME_IG < '%').
    Conflict between rule 67 and token '[' resolved as shift (ME_IG < '[').
    Conflict between rule 67 and token '(' resolved as shift (ME_IG < '(').
    Conflict between rule 67 and token '.' resolved as shift (ME_IG < '.').


state 146

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   66  | E OR E .
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 66 (E)

    Conflict between rule 66 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 66 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 66 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 66 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 66 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 66 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 66 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 66 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 66 and token '+' resolved as shift (OR < '+').
    Conflict between rule 66 and token '-' resolved as shift (OR < '-').
    Conflict between rule 66 and token '*' resolved as shift (OR < '*').
    Conflict between rule 66 and token '/' resolved as shift (OR < '/').
    Conflict between rule 66 and token '%' resolved as shift (OR < '%').
    Conflict between rule 66 and token '[' resolved as shift (OR < '[').
    Conflict between rule 66 and token '(' resolved as shift (OR < '(').
    Conflict between rule 66 and token '.' resolved as shift (OR < '.').


state 147

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   65  | E AND E .
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 65 (E)

    Conflict between rule 65 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 65 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 65 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 65 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 65 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 65 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 65 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 65 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 65 and token '+' resolved as shift (AND < '+').
    Conflict between rule 65 and token '-' resolved as shift (AND < '-').
    Conflict between rule 65 and token '*' resolved as shift (AND < '*').
    Conflict between rule 65 and token '/' resolved as shift (AND < '/').
    Conflict between rule 65 and token '%' resolved as shift (AND < '%').
    Conflict between rule 65 and token '[' resolved as shift (AND < '[').
    Conflict between rule 65 and token '(' resolved as shift (AND < '(').
    Conflict between rule 65 and token '.' resolved as shift (AND < '.').


state 148

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   71  | E '+' E .
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    $default  reduce using rule 71 (E)

    Conflict between rule 71 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 71 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 71 and token IGUAL resolved as reduce (IGUAL < '+').
    Conflict between rule 71 and token DIF resolved as reduce (DIF < '+').
    Conflict between rule 71 and token MA_IG resolved as reduce (MA_IG < '+').
    Conflict between rule 71 and token ME_IG resolved as reduce (ME_IG < '+').
    Conflict between rule 71 and token OR resolved as reduce (OR < '+').
    Conflict between rule 71 and token AND resolved as reduce (AND < '+').
    Conflict between rule 71 and token '+' resolved as reduce (%left '+').
    Conflict between rule 71 and token '-' resolved as reduce (%left '-').
    Conflict between rule 71 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 71 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 71 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 71 and token '[' resolved as shift ('+' < '[').
    Conflict between rule 71 and token '(' resolved as shift ('+' < '(').
    Conflict between rule 71 and token '.' resolved as shift ('+' < '.').


state 149

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   72  | E '-' E .
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    $default  reduce using rule 72 (E)

    Conflict between rule 72 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 72 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 72 and token IGUAL resolved as reduce (IGUAL < '-').
    Conflict between rule 72 and token DIF resolved as reduce (DIF < '-').
    Conflict between rule 72 and token MA_IG resolved as reduce (MA_IG < '-').
    Conflict between rule 72 and token ME_IG resolved as reduce (ME_IG < '-').
    Conflict between rule 72 and token OR resolved as reduce (OR < '-').
    Conflict between rule 72 and token AND resolved as reduce (AND < '-').
    Conflict between rule 72 and token '+' resolved as reduce (%left '+').
    Conflict between rule 72 and token '-' resolved as reduce (%left '-').
    Conflict between rule 72 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 72 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 72 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 72 and token '[' resolved as shift ('-' < '[').
    Conflict between rule 72 and token '(' resolved as shift ('-' < '(').
    Conflict between rule 72 and token '.' resolved as shift ('-' < '.').


state 150

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   73  | E '*' E .
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    $default  reduce using rule 73 (E)

    Conflict between rule 73 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 73 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 73 and token IGUAL resolved as reduce (IGUAL < '*').
    Conflict between rule 73 and token DIF resolved as reduce (DIF < '*').
    Conflict between rule 73 and token MA_IG resolved as reduce (MA_IG < '*').
    Conflict between rule 73 and token ME_IG resolved as reduce (ME_IG < '*').
    Conflict between rule 73 and token OR resolved as reduce (OR < '*').
    Conflict between rule 73 and token AND resolved as reduce (AND < '*').
    Conflict between rule 73 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 73 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 73 and token '*' resolved as reduce (%left '*').
    Conflict between rule 73 and token '/' resolved as reduce (%left '/').
    Conflict between rule 73 and token '%' resolved as reduce (%left '%').
    Conflict between rule 73 and token '[' resolved as shift ('*' < '[').
    Conflict between rule 73 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 73 and token '.' resolved as shift ('*' < '.').


state 151

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   74  | E '/' E .
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    $default  reduce using rule 74 (E)

    Conflict between rule 74 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 74 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 74 and token IGUAL resolved as reduce (IGUAL < '/').
    Conflict between rule 74 and token DIF resolved as reduce (DIF < '/').
    Conflict between rule 74 and token MA_IG resolved as reduce (MA_IG < '/').
    Conflict between rule 74 and token ME_IG resolved as reduce (ME_IG < '/').
    Conflict between rule 74 and token OR resolved as reduce (OR < '/').
    Conflict between rule 74 and token AND resolved as reduce (AND < '/').
    Conflict between rule 74 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 74 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 74 and token '*' resolved as reduce (%left '*').
    Conflict between rule 74 and token '/' resolved as reduce (%left '/').
    Conflict between rule 74 and token '%' resolved as reduce (%left '%').
    Conflict between rule 74 and token '[' resolved as shift ('/' < '[').
    Conflict between rule 74 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 74 and token '.' resolved as shift ('/' < '.').


state 152

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   75  | E '%' E .
   90  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 97
    '('  shift, and go to state 98
    '.'  shift, and go to state 99

    $default  reduce using rule 75 (E)

    Conflict between rule 75 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 75 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 75 and token IGUAL resolved as reduce (IGUAL < '%').
    Conflict between rule 75 and token DIF resolved as reduce (DIF < '%').
    Conflict between rule 75 and token MA_IG resolved as reduce (MA_IG < '%').
    Conflict between rule 75 and token ME_IG resolved as reduce (ME_IG < '%').
    Conflict between rule 75 and token OR resolved as reduce (OR < '%').
    Conflict between rule 75 and token AND resolved as reduce (AND < '%').
    Conflict between rule 75 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 75 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 75 and token '*' resolved as reduce (%left '*').
    Conflict between rule 75 and token '/' resolved as reduce (%left '/').
    Conflict between rule 75 and token '%' resolved as reduce (%left '%').
    Conflict between rule 75 and token '[' resolved as shift ('%' < '[').
    Conflict between rule 75 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 75 and token '.' resolved as shift ('%' < '.').


state 153

   55 LVALUEPROP: E . '[' E ']'
   55           | E '[' E . ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ']'    shift, and go to state 191


state 154

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
  104 ARG: E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 104 (ARG)


state 155

   90 E: E '(' LISTA_ARGs . ')'

    ')'  shift, and go to state 192


state 156

  100 LISTA_ARGs: ARGs .
  102 ARGs: ARGs . ',' ARG

    ','  shift, and go to state 193

    $default  reduce using rule 100 (LISTA_ARGs)


state 157

  103 ARGs: ARG .

    $default  reduce using rule 103 (ARGs)


state 158

  105 ARG: OBJ .

    $default  reduce using rule 105 (ARG)


state 159

   56 LVALUEPROP: E '.' ID .

    $default  reduce using rule 56 (LVALUEPROP)


state 160

   11 CMD: E CMD_ASM ';' .

    $default  reduce using rule 11 (CMD)


state 161

   83 E: '{' . '}'
   95  | ID SETA EMPILHA_TS '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 71

    CMDs        go to state 194
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 162

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
   94  | ID SETA EMPILHA_TS E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 94 (E)

    Conflict between rule 94 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 94 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 94 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 94 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 94 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 94 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 94 and token OR resolved as shift (SETA < OR).
    Conflict between rule 94 and token AND resolved as shift (SETA < AND).
    Conflict between rule 94 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 94 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 94 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 94 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 94 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 94 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 94 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 94 and token '.' resolved as shift (SETA < '.').


state 163

   30 CMD_FOR: FOR '(' PRIM_E ';' . E ';' E ')' E REDUCE
   31        | FOR '(' PRIM_E ';' . E ';' E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 195


state 164

   29 CMD_WHILE: WHILE '(' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 196
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 165

   48 VAR_LET: ID '=' E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 48 (VAR_LET)


state 166

   49 VAR_LET: ID '=' OBJ .

    $default  reduce using rule 49 (VAR_LET)


state 167

   41 VARs_LET: VAR_LET ',' VARs_LET .

    $default  reduce using rule 41 (VARs_LET)


state 168

   51 VAR_VAR: ID '=' E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 51 (VAR_VAR)


state 169

   52 VAR_VAR: ID '=' OBJ .

    $default  reduce using rule 52 (VAR_VAR)


state 170

   43 VARs_VAR: VAR_VAR ',' VARs_VAR .

    $default  reduce using rule 43 (VARs_VAR)


state 171

   53 VAR_CONST: ID '=' E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 53 (VAR_CONST)


state 172

   54 VAR_CONST: ID '=' OBJ .

    $default  reduce using rule 54 (VAR_CONST)


state 173

   45 VARs_CONST: VAR_CONST ',' VARs_CONST .

    $default  reduce using rule 45 (VARs_CONST)


state 174

   22 CMD_FUNC: FUNCTION ID $@1 '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 119

    LISTA_PARAMs  go to state 197
    PARAM         go to state 68


state 175

   27 PARAM: ID '=' . E
   28      | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 198
    OBJ         go to state 183


state 176

   93 E: FUNCTION '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 199


state 177

   36 CMD_IF: IF '(' E ')' . CMD
   37       | IF '(' E ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 200
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 178

  109 CAMPO: ID ':' . E
  110      | ID ':' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 201
    OBJ         go to state 202


state 179

  106 OBJ: '{' LISTA_CAMPOS '}' .

    $default  reduce using rule 106 (OBJ)


state 180

  107 LISTA_CAMPOS: LISTA_CAMPOS ',' . CAMPO

    ID  shift, and go to state 122

    CAMPO  go to state 203


state 181

  111 LISTA_ELEMS: LISTA_ELEMS ',' ELEM .

    $default  reduce using rule 111 (LISTA_ELEMS)


state 182

   27 PARAM: ID '=' E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   57 E: ID '=' E .
   63  | E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    ')'       reduce using rule 57 (E)
    $default  reduce using rule 27 (PARAM)

    Conflict between rule 57 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 57 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 57 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 57 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 57 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 57 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 57 and token OR resolved as shift ('=' < OR).
    Conflict between rule 57 and token AND resolved as shift ('=' < AND).
    Conflict between rule 57 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 57 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 57 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 57 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 57 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 57 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 57 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 57 and token '.' resolved as shift ('=' < '.').


state 183

   28 PARAM: ID '=' OBJ .

    $default  reduce using rule 28 (PARAM)


state 184

   97 E: '(' PARENTESES_FUNCAO SETA '{' . EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 204


state 185

   96 E: '(' PARENTESES_FUNCAO SETA EMPILHA_TS . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 205


state 186

   98 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . E
   99  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 206

    LVALUEPROP  go to state 32
    E           go to state 207


state 187

   24 LISTA_PARAMs: LISTA_PARAMs ',' PARAM .

    $default  reduce using rule 24 (LISTA_PARAMs)


state 188

   16 CMD: '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 16 (CMD)


state 189

   19 ASM_STRING: ASM_WORD ASM_STRING .

    $default  reduce using rule 19 (ASM_STRING)


state 190

   18 CMD_ASM: ASM ASM_STRING '}' .

    $default  reduce using rule 18 (CMD_ASM)


state 191

   55 LVALUEPROP: E '[' E ']' .

    $default  reduce using rule 55 (LVALUEPROP)


state 192

   90 E: E '(' LISTA_ARGs ')' .

    $default  reduce using rule 90 (E)


state 193

  102 ARGs: ARGs ',' . ARG

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 154
    ARG         go to state 208
    OBJ         go to state 158


state 194

    2 CMDs: CMDs . CMD
   95 E: ID SETA EMPILHA_TS '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 209

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 195

   30 CMD_FOR: FOR '(' PRIM_E ';' E . ';' E ')' E REDUCE
   31        | FOR '(' PRIM_E ';' E . ';' E ')' CMD
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ';'    shift, and go to state 210


state 196

   29 CMD_WHILE: WHILE '(' E ')' CMD .

    $default  reduce using rule 29 (CMD_WHILE)


state 197

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs . ')' '{' CMDs '}'
   24 LISTA_PARAMs: LISTA_PARAMs . ',' PARAM

    ')'  shift, and go to state 211
    ','  shift, and go to state 130


state 198

   27 PARAM: ID '=' E .
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 27 (PARAM)


state 199

   93 E: FUNCTION '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 212
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 200

   36 CMD_IF: IF '(' E ')' CMD .
   37       | IF '(' E ')' CMD . ELSE CMD

    ELSE  shift, and go to state 213

    $default  reduce using rule 36 (CMD_IF)

    Conflict between rule 36 and token ELSE resolved as shift (REDUCE < ELSE).


state 201

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
  109 CAMPO: ID ':' E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 109 (CAMPO)


state 202

  110 CAMPO: ID ':' OBJ .

    $default  reduce using rule 110 (CAMPO)


state 203

  107 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO .

    $default  reduce using rule 107 (LISTA_CAMPOS)


state 204

   97 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 214
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 205

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
   96  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 96 (E)

    Conflict between rule 96 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 96 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 96 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 96 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 96 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 96 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 96 and token OR resolved as shift (SETA < OR).
    Conflict between rule 96 and token AND resolved as shift (SETA < AND).
    Conflict between rule 96 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 96 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 96 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 96 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 96 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 96 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 96 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 96 and token '.' resolved as shift (SETA < '.').


state 206

   83 E: '{' . '}'
   99  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 71

    CMDs        go to state 215
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 207

   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'
   98  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E .

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99

    $default  reduce using rule 98 (E)

    Conflict between rule 98 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 98 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 98 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 98 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 98 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 98 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 98 and token OR resolved as shift (SETA < OR).
    Conflict between rule 98 and token AND resolved as shift (SETA < AND).
    Conflict between rule 98 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 98 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 98 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 98 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 98 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 98 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 98 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 98 and token '.' resolved as shift (SETA < '.').


state 208

  102 ARGs: ARGs ',' ARG .

    $default  reduce using rule 102 (ARGs)


state 209

   95 E: ID SETA EMPILHA_TS '{' CMDs '}' .

    $default  reduce using rule 95 (E)


state 210

   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' . E ')' E REDUCE
   31        | FOR '(' PRIM_E ';' E ';' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 216


state 211

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 217


state 212

    2 CMDs: CMDs . CMD
   93 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 218

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 213

   37 CMD_IF: IF '(' E ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 219
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 214

    2 CMDs: CMDs . CMD
   97 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 220

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 215

    2 CMDs: CMDs . CMD
   99 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 221

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 216

   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' E . ')' E REDUCE
   31        | FOR '(' PRIM_E ';' E ';' E . ')' CMD
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 84
    '>'    shift, and go to state 85
    IGUAL  shift, and go to state 86
    DIF    shift, and go to state 87
    MA_IG  shift, and go to state 88
    ME_IG  shift, and go to state 89
    OR     shift, and go to state 90
    AND    shift, and go to state 91
    '+'    shift, and go to state 92
    '-'    shift, and go to state 93
    '*'    shift, and go to state 94
    '/'    shift, and go to state 95
    '%'    shift, and go to state 96
    '['    shift, and go to state 97
    '('    shift, and go to state 98
    '.'    shift, and go to state 99
    ')'    shift, and go to state 222


state 217

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 223
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 218

   93 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 93 (E)


state 219

   37 CMD_IF: IF '(' E ')' CMD ELSE CMD .

    $default  reduce using rule 37 (CMD_IF)


state 220

   97 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 97 (E)


state 221

   99 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}' .

    $default  reduce using rule 99 (E)


state 222

   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' . E REDUCE
   31        | FOR '(' PRIM_E ';' E ';' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 224
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 225


state 223

    2 CMDs: CMDs . CMD
   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 226

    CMD         go to state 74
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 224

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD .

    $default  reduce using rule 31 (CMD_FOR)


state 225

   11 CMD: E . CMD_ASM ';'
   15    | E . ';'
   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E . REDUCE
   55 LVALUEPROP: E . '[' E ']'
   56           | E . '.' ID
   63 E: E . '<' E
   64  | E . '>' E
   65  | E . AND E
   66  | E . OR E
   67  | E . ME_IG E
   68  | E . MA_IG E
   69  | E . DIF E
   70  | E . IGUAL E
   71  | E . '+' E
   72  | E . '-' E
   73  | E . '*' E
   74  | E . '/' E
   75  | E . '%' E
   90  | E . '(' LISTA_ARGs ')'

    ASM     shift, and go to state 83
    '<'     shift, and go to state 84
    '>'     shift, and go to state 85
    IGUAL   shift, and go to state 86
    DIF     shift, and go to state 87
    MA_IG   shift, and go to state 88
    ME_IG   shift, and go to state 89
    OR      shift, and go to state 90
    AND     shift, and go to state 91
    REDUCE  shift, and go to state 227
    '+'     shift, and go to state 92
    '-'     shift, and go to state 93
    '*'     shift, and go to state 94
    '/'     shift, and go to state 95
    '%'     shift, and go to state 96
    '['     shift, and go to state 97
    '('     shift, and go to state 98
    '.'     shift, and go to state 99
    ';'     shift, and go to state 100

    CMD_ASM  go to state 101


state 226

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 22 (CMD_FUNC)


state 227

   30 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E REDUCE .

    $default  reduce using rule 30 (CMD_FOR)
