State 19 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | CMD

    4 CMD: CMD_LET ';'
    5    | CMD_VAR ';'
    6    | CMD_CONST ';'
    7    | CMD_IF
    8    | CMD_FUNC
    9    | CMD_RET ';'
   10    | CMD_RET E ';'
   11    | E CMD_ASM ';'
   12    | PRINT E ';'
   13    | CMD_WHILE
   14    | CMD_FOR
   15    | E ';'
   16    | '{' EMPILHA_TS CMDs '}'

   17 EMPILHA_TS: /* empty */

   18 CMD_ASM: ASM ASM_STRING '}'

   19 ASM_STRING: ASM_WORD ASM_STRING
   20           | /* empty */

   21 $@1: /* empty */

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   23 CMD_RET: RETURN

   24 LISTA_PARAMs: PARAMs
   25             | /* empty */

   26 PARAMs: PARAMs ',' PARAM
   27       | PARAM EMPILHA_TS

   28 PARAM: ID
   29      | ID '=' E

   30 CMD_WHILE: WHILE '(' E ')' CMD

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   32 PRIM_E: CMD_LET
   33       | CMD_VAR
   34       | CMD_CONST
   35       | E

   36 CMD_IF: IF '(' E ')' CMD
   37       | IF '(' E ')' CMD ELSE CMD

   38 CMD_LET: LET VARs_LET

   39 CMD_VAR: VAR VARs_VAR

   40 CMD_CONST: CONST VARs_CONST

   41 VARs_LET: VAR_LET ',' VARs_LET
   42         | VAR_LET

   43 VARs_VAR: VAR_VAR ',' VARs_VAR
   44         | VAR_VAR

   45 VARs_CONST: VAR_CONST ',' VARs_CONST
   46           | VAR_CONST

   47 VAR_LET: ID
   48        | ID '=' E

   49 VAR_VAR: ID
   50        | ID '=' E

   51 VAR_CONST: ID '=' E

   52 LVALUEPROP: E '[' E ']'
   53           | E '.' ID

   54 E: ID '=' E
   55  | ID MAIS_IGUAL E
   56  | ID MAIS_MAIS
   57  | LVALUEPROP '=' E
   58  | LVALUEPROP MAIS_IGUAL E
   59  | LVALUEPROP MAIS_MAIS
   60  | E '<' E
   61  | E '>' E
   62  | E AND E
   63  | E OR E
   64  | E ME_IG E
   65  | E MA_IG E
   66  | E DIF E
   67  | E IGUAL E
   68  | E '+' E
   69  | E '-' E
   70  | E '*' E
   71  | E '/' E
   72  | E '%' E
   73  | CDOUBLE
   74  | '+' CDOUBLE
   75  | '-' CDOUBLE
   76  | CINT
   77  | '+' CINT
   78  | '-' CINT
   79  | CSTRING
   80  | '{' '}'
   81  | '[' ']'
   82  | ID
   83  | LVALUEPROP
   84  | TRUE_TK
   85  | FALSE_TK
   86  | '(' E ')'
   87  | E '(' LISTA_ARGs ')'
   88  | OBJ
   89  | '[' LISTA_ELEMS ']'
   90  | FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}'
   91  | ID SETA EMPILHA_TS E
   92  | ID SETA EMPILHA_TS '{' CMDs '}'
   93  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E
   94  | '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
   95  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E
   96  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

   97 LISTA_ARGs: ARGs
   98           | /* empty */

   99 ARGs: ARGs ',' E
  100     | E

  101 OBJ: '{' LISTA_CAMPOS '}'

  102 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO
  103             | CAMPO

  104 CAMPO: ID ':' E

  105 LISTA_ELEMS: LISTA_ELEMS ',' E
  106            | E


Terminals, with rules where they appear

$end (0) 0
'%' (37) 72
'(' (40) 22 30 31 36 37 86 87 90 93 94 95 96
')' (41) 22 30 31 36 37 86 87 90
'*' (42) 70
'+' (43) 68 74 77
',' (44) 26 41 43 45 99 102 105
'-' (45) 69 75 78
'.' (46) 53
'/' (47) 71
':' (58) 104
';' (59) 4 5 6 9 10 11 12 15 31
'<' (60) 60
'=' (61) 29 48 50 51 54 57
'>' (62) 61
'[' (91) 52 81 89
']' (93) 52 81 89
'{' (123) 16 22 80 90 92 94 96 101
'}' (125) 16 18 22 80 90 92 94 96 101
error (256)
ID (258) 22 28 29 47 48 49 50 51 53 54 55 56 82 91 92 104
PRINT (259) 12
FOR (260) 31
WHILE (261) 30
ASM (262) 18
ASM_WORD (263) 19
LET (264) 38
VAR (265) 39
CONST (266) 40
FUNCTION (267) 22 90
RETURN (268) 23
TRUE_TK (269) 84
FALSE_TK (270) 85
CDOUBLE (271) 73 74 75
CSTRING (272) 79
CINT (273) 76 77 78
PARENTESES_FUNCAO (274) 93 94 95 96
SETA (275) 91 92 93 94 95 96
MAIS_IGUAL (276) 55 58
MAIS_MAIS (277) 56 59
IGUAL (278) 67
DIF (279) 66
MA_IG (280) 65
ME_IG (281) 64
OR (282) 63
AND (283) 62
IF (284) 36 37
REDUCE (285)
ELSE (286) 37


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
S (51)
    on left: 1, on right: 0
CMDs (52)
    on left: 2 3, on right: 1 2 16 22 90 92 94 96
CMD (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3 30 31
    36 37
EMPILHA_TS (54)
    on left: 17, on right: 16 27 91 92 93 94
CMD_ASM (55)
    on left: 18, on right: 11
ASM_STRING (56)
    on left: 19 20, on right: 18 19
CMD_FUNC (57)
    on left: 22, on right: 8
$@1 (58)
    on left: 21, on right: 22
CMD_RET (59)
    on left: 23, on right: 9 10
LISTA_PARAMs (60)
    on left: 24 25, on right: 22 90 95 96
PARAMs (61)
    on left: 26 27, on right: 24 26
PARAM (62)
    on left: 28 29, on right: 26 27
CMD_WHILE (63)
    on left: 30, on right: 13
CMD_FOR (64)
    on left: 31, on right: 14
PRIM_E (65)
    on left: 32 33 34 35, on right: 31
CMD_IF (66)
    on left: 36 37, on right: 7
CMD_LET (67)
    on left: 38, on right: 4 32
CMD_VAR (68)
    on left: 39, on right: 5 33
CMD_CONST (69)
    on left: 40, on right: 6 34
VARs_LET (70)
    on left: 41 42, on right: 38 41
VARs_VAR (71)
    on left: 43 44, on right: 39 43
VARs_CONST (72)
    on left: 45 46, on right: 40 45
VAR_LET (73)
    on left: 47 48, on right: 41 42
VAR_VAR (74)
    on left: 49 50, on right: 43 44
VAR_CONST (75)
    on left: 51, on right: 45 46
LVALUEPROP (76)
    on left: 52 53, on right: 57 58 59 83
E (77)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96, on right: 10 11 12 15 29 30 31 35 36 37 48 50 51 52
    53 54 55 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 86 87 91
    93 95 99 100 104 105 106
LISTA_ARGs (78)
    on left: 97 98, on right: 87
ARGs (79)
    on left: 99 100, on right: 97 99
OBJ (80)
    on left: 101, on right: 88
LISTA_CAMPOS (81)
    on left: 102 103, on right: 101 102
CAMPO (82)
    on left: 104, on right: 102 103
LISTA_ELEMS (83)
    on left: 105 106, on right: 89 105


state 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    S           go to state 21
    CMDs        go to state 22
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 1

   54 E: ID . '=' E
   55  | ID . MAIS_IGUAL E
   56  | ID . MAIS_MAIS
   82  | ID .
   91  | ID . SETA EMPILHA_TS E
   92  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 35
    SETA        shift, and go to state 36
    MAIS_IGUAL  shift, and go to state 37
    MAIS_MAIS   shift, and go to state 38

    $default  reduce using rule 82 (E)


state 2

   12 CMD: PRINT . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 41
    OBJ         go to state 34


state 3

   31 CMD_FOR: FOR . '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 42


state 4

   30 CMD_WHILE: WHILE . '(' E ')' CMD

    '('  shift, and go to state 43


state 5

   38 CMD_LET: LET . VARs_LET

    ID  shift, and go to state 44

    VARs_LET  go to state 45
    VAR_LET   go to state 46


state 6

   39 CMD_VAR: VAR . VARs_VAR

    ID  shift, and go to state 47

    VARs_VAR  go to state 48
    VAR_VAR   go to state 49


state 7

   40 CMD_CONST: CONST . VARs_CONST

    ID  shift, and go to state 50

    VARs_CONST  go to state 51
    VAR_CONST   go to state 52


state 8

   22 CMD_FUNC: FUNCTION . ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   90 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID   shift, and go to state 53
    '('  shift, and go to state 54


state 9

   23 CMD_RET: RETURN .

    $default  reduce using rule 23 (CMD_RET)


state 10

   84 E: TRUE_TK .

    $default  reduce using rule 84 (E)


state 11

   85 E: FALSE_TK .

    $default  reduce using rule 85 (E)


state 12

   73 E: CDOUBLE .

    $default  reduce using rule 73 (E)


state 13

   79 E: CSTRING .

    $default  reduce using rule 79 (E)


state 14

   76 E: CINT .

    $default  reduce using rule 76 (E)


state 15

   36 CMD_IF: IF . '(' E ')' CMD
   37       | IF . '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 55


state 16

   74 E: '+' . CDOUBLE
   77  | '+' . CINT

    CDOUBLE  shift, and go to state 56
    CINT     shift, and go to state 57


state 17

   75 E: '-' . CDOUBLE
   78  | '-' . CINT

    CDOUBLE  shift, and go to state 58
    CINT     shift, and go to state 59


state 18

   81 E: '[' . ']'
   89  | '[' . LISTA_ELEMS ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40
    ']'       shift, and go to state 60

    LVALUEPROP   go to state 32
    E            go to state 61
    OBJ          go to state 34
    LISTA_ELEMS  go to state 62


state 19

   86 E: '(' . E ')'
   93  | '(' . PARENTESES_FUNCAO SETA EMPILHA_TS E
   94  | '(' . PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
   95  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA E
   96  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

    ID                 shift, and go to state 63
    FUNCTION           shift, and go to state 39
    TRUE_TK            shift, and go to state 10
    FALSE_TK           shift, and go to state 11
    CDOUBLE            shift, and go to state 12
    CSTRING            shift, and go to state 13
    CINT               shift, and go to state 14
    PARENTESES_FUNCAO  shift, and go to state 64
    '+'                shift, and go to state 16
    '-'                shift, and go to state 17
    '['                shift, and go to state 18
    '('                shift, and go to state 19
    '{'                shift, and go to state 40

    PARENTESES_FUNCAO  [reduce using rule 25 (LISTA_PARAMs)]

    LISTA_PARAMs  go to state 65
    PARAMs        go to state 66
    PARAM         go to state 67
    LVALUEPROP    go to state 32
    E             go to state 68
    OBJ           go to state 34


state 20

   16 CMD: '{' . EMPILHA_TS CMDs '}'
   80 E: '{' . '}'
  101 OBJ: '{' . LISTA_CAMPOS '}'

    ID   shift, and go to state 69
    '}'  shift, and go to state 70

    ID        [reduce using rule 17 (EMPILHA_TS)]
    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 71
    LISTA_CAMPOS  go to state 72
    CAMPO         go to state 73


state 21

    0 $accept: S . $end

    $end  shift, and go to state 74


state 22

    1 S: CMDs .
    2 CMDs: CMDs . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    $default  reduce using rule 1 (S)

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 23

    3 CMDs: CMD .

    $default  reduce using rule 3 (CMDs)


state 24

    8 CMD: CMD_FUNC .

    $default  reduce using rule 8 (CMD)


state 25

    9 CMD: CMD_RET . ';'
   10    | CMD_RET . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 76
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 77
    OBJ         go to state 34


state 26

   13 CMD: CMD_WHILE .

    $default  reduce using rule 13 (CMD)


state 27

   14 CMD: CMD_FOR .

    $default  reduce using rule 14 (CMD)


state 28

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


state 29

    4 CMD: CMD_LET . ';'

    ';'  shift, and go to state 78


state 30

    5 CMD: CMD_VAR . ';'

    ';'  shift, and go to state 79


state 31

    6 CMD: CMD_CONST . ';'

    ';'  shift, and go to state 80


state 32

   57 E: LVALUEPROP . '=' E
   58  | LVALUEPROP . MAIS_IGUAL E
   59  | LVALUEPROP . MAIS_MAIS
   83  | LVALUEPROP .

    '='         shift, and go to state 81
    MAIS_IGUAL  shift, and go to state 82
    MAIS_MAIS   shift, and go to state 83

    $default  reduce using rule 83 (E)


state 33

   11 CMD: E . CMD_ASM ';'
   15    | E . ';'
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 84
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 101

    CMD_ASM  go to state 102


state 34

   88 E: OBJ .

    $default  reduce using rule 88 (E)


state 35

   54 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 103
    OBJ         go to state 34


state 36

   91 E: ID SETA . EMPILHA_TS E
   92  | ID SETA . EMPILHA_TS '{' CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 104


state 37

   55 E: ID MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 105
    OBJ         go to state 34


state 38

   56 E: ID MAIS_MAIS .

    $default  reduce using rule 56 (E)


state 39

   90 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 54


state 40

   80 E: '{' . '}'
  101 OBJ: '{' . LISTA_CAMPOS '}'

    ID   shift, and go to state 69
    '}'  shift, and go to state 70

    LISTA_CAMPOS  go to state 72
    CAMPO         go to state 73


state 41

   12 CMD: PRINT E . ';'
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 106


state 42

   31 CMD_FOR: FOR '(' . PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 1
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    PRIM_E      go to state 107
    CMD_LET     go to state 108
    CMD_VAR     go to state 109
    CMD_CONST   go to state 110
    LVALUEPROP  go to state 32
    E           go to state 111
    OBJ         go to state 34


state 43

   30 CMD_WHILE: WHILE '(' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 112
    OBJ         go to state 34


state 44

   47 VAR_LET: ID .
   48        | ID . '=' E

    '='  shift, and go to state 113

    $default  reduce using rule 47 (VAR_LET)


state 45

   38 CMD_LET: LET VARs_LET .

    $default  reduce using rule 38 (CMD_LET)


state 46

   41 VARs_LET: VAR_LET . ',' VARs_LET
   42         | VAR_LET .

    ','  shift, and go to state 114

    $default  reduce using rule 42 (VARs_LET)


state 47

   49 VAR_VAR: ID .
   50        | ID . '=' E

    '='  shift, and go to state 115

    $default  reduce using rule 49 (VAR_VAR)


state 48

   39 CMD_VAR: VAR VARs_VAR .

    $default  reduce using rule 39 (CMD_VAR)


state 49

   43 VARs_VAR: VAR_VAR . ',' VARs_VAR
   44         | VAR_VAR .

    ','  shift, and go to state 116

    $default  reduce using rule 44 (VARs_VAR)


state 50

   51 VAR_CONST: ID . '=' E

    '='  shift, and go to state 117


state 51

   40 CMD_CONST: CONST VARs_CONST .

    $default  reduce using rule 40 (CMD_CONST)


state 52

   45 VARs_CONST: VAR_CONST . ',' VARs_CONST
   46           | VAR_CONST .

    ','  shift, and go to state 118

    $default  reduce using rule 46 (VARs_CONST)


state 53

   22 CMD_FUNC: FUNCTION ID . $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 21 ($@1)

    $@1  go to state 119


state 54

   90 E: FUNCTION '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 120

    $default  reduce using rule 25 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 121
    PARAMs        go to state 66
    PARAM         go to state 67


state 55

   36 CMD_IF: IF '(' . E ')' CMD
   37       | IF '(' . E ')' CMD ELSE CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 122
    OBJ         go to state 34


state 56

   74 E: '+' CDOUBLE .

    $default  reduce using rule 74 (E)


state 57

   77 E: '+' CINT .

    $default  reduce using rule 77 (E)


state 58

   75 E: '-' CDOUBLE .

    $default  reduce using rule 75 (E)


state 59

   78 E: '-' CINT .

    $default  reduce using rule 78 (E)


state 60

   81 E: '[' ']' .

    $default  reduce using rule 81 (E)


state 61

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
  106 LISTA_ELEMS: E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 106 (LISTA_ELEMS)


state 62

   89 E: '[' LISTA_ELEMS . ']'
  105 LISTA_ELEMS: LISTA_ELEMS . ',' E

    ','  shift, and go to state 123
    ']'  shift, and go to state 124


state 63

   28 PARAM: ID .
   29      | ID . '=' E
   54 E: ID . '=' E
   55  | ID . MAIS_IGUAL E
   56  | ID . MAIS_MAIS
   82  | ID .
   91  | ID . SETA EMPILHA_TS E
   92  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 125
    SETA        shift, and go to state 36
    MAIS_IGUAL  shift, and go to state 37
    MAIS_MAIS   shift, and go to state 38

    PARENTESES_FUNCAO  reduce using rule 28 (PARAM)
    ','                reduce using rule 28 (PARAM)
    $default           reduce using rule 82 (E)


state 64

   93 E: '(' PARENTESES_FUNCAO . SETA EMPILHA_TS E
   94  | '(' PARENTESES_FUNCAO . SETA '{' EMPILHA_TS CMDs '}'

    SETA  shift, and go to state 126


state 65

   95 E: '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA E
   96  | '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA '{' CMDs '}'

    PARENTESES_FUNCAO  shift, and go to state 127


state 66

   24 LISTA_PARAMs: PARAMs .
   26 PARAMs: PARAMs . ',' PARAM

    ','  shift, and go to state 128

    $default  reduce using rule 24 (LISTA_PARAMs)


state 67

   27 PARAMs: PARAM . EMPILHA_TS

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 129


state 68

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   86  | '(' E . ')'
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 130


state 69

  104 CAMPO: ID . ':' E

    ':'  shift, and go to state 131


state 70

   80 E: '{' '}' .

    $default  reduce using rule 80 (E)


state 71

   16 CMD: '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 132
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 72

  101 OBJ: '{' LISTA_CAMPOS . '}'
  102 LISTA_CAMPOS: LISTA_CAMPOS . ',' CAMPO

    '}'  shift, and go to state 133
    ','  shift, and go to state 134


state 73

  103 LISTA_CAMPOS: CAMPO .

    $default  reduce using rule 103 (LISTA_CAMPOS)


state 74

    0 $accept: S $end .

    $default  accept


state 75

    2 CMDs: CMDs CMD .

    $default  reduce using rule 2 (CMDs)


state 76

    9 CMD: CMD_RET ';' .

    $default  reduce using rule 9 (CMD)


state 77

   10 CMD: CMD_RET E . ';'
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 135


state 78

    4 CMD: CMD_LET ';' .

    $default  reduce using rule 4 (CMD)


state 79

    5 CMD: CMD_VAR ';' .

    $default  reduce using rule 5 (CMD)


state 80

    6 CMD: CMD_CONST ';' .

    $default  reduce using rule 6 (CMD)


state 81

   57 E: LVALUEPROP '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 136
    OBJ         go to state 34


state 82

   58 E: LVALUEPROP MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 137
    OBJ         go to state 34


state 83

   59 E: LVALUEPROP MAIS_MAIS .

    $default  reduce using rule 59 (E)


state 84

   18 CMD_ASM: ASM . ASM_STRING '}'

    ASM_WORD  shift, and go to state 138

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 139


state 85

   60 E: E '<' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 140
    OBJ         go to state 34


state 86

   61 E: E '>' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 141
    OBJ         go to state 34


state 87

   67 E: E IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 142
    OBJ         go to state 34


state 88

   66 E: E DIF . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 143
    OBJ         go to state 34


state 89

   65 E: E MA_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 144
    OBJ         go to state 34


state 90

   64 E: E ME_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 145
    OBJ         go to state 34


state 91

   63 E: E OR . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 146
    OBJ         go to state 34


state 92

   62 E: E AND . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 147
    OBJ         go to state 34


state 93

   68 E: E '+' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 148
    OBJ         go to state 34


state 94

   69 E: E '-' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 149
    OBJ         go to state 34


state 95

   70 E: E '*' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 150
    OBJ         go to state 34


state 96

   71 E: E '/' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 151
    OBJ         go to state 34


state 97

   72 E: E '%' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 152
    OBJ         go to state 34


state 98

   52 LVALUEPROP: E '[' . E ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 153
    OBJ         go to state 34


state 99

   87 E: E '(' . LISTA_ARGs ')'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    $default  reduce using rule 98 (LISTA_ARGs)

    LVALUEPROP  go to state 32
    E           go to state 154
    LISTA_ARGs  go to state 155
    ARGs        go to state 156
    OBJ         go to state 34


state 100

   53 LVALUEPROP: E '.' . ID

    ID  shift, and go to state 157


state 101

   15 CMD: E ';' .

    $default  reduce using rule 15 (CMD)


state 102

   11 CMD: E CMD_ASM . ';'

    ';'  shift, and go to state 158


state 103

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   54 E: ID '=' E .
   60  | E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 54 (E)

    Conflict between rule 54 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 54 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 54 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 54 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 54 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 54 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 54 and token OR resolved as shift ('=' < OR).
    Conflict between rule 54 and token AND resolved as shift ('=' < AND).
    Conflict between rule 54 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 54 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 54 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 54 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 54 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 54 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 54 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 54 and token '.' resolved as shift ('=' < '.').


state 104

   91 E: ID SETA EMPILHA_TS . E
   92  | ID SETA EMPILHA_TS . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 159

    LVALUEPROP  go to state 32
    E           go to state 160
    OBJ         go to state 34


state 105

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   55 E: ID MAIS_IGUAL E .
   60  | E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 55 (E)

    Conflict between rule 55 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 55 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 55 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 55 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 55 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 55 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 55 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 55 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 55 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 55 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 55 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 55 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 55 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 55 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 55 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 55 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 106

   12 CMD: PRINT E ';' .

    $default  reduce using rule 12 (CMD)


state 107

   31 CMD_FOR: FOR '(' PRIM_E . ';' E ';' E ')' CMD

    ';'  shift, and go to state 161


state 108

   32 PRIM_E: CMD_LET .

    $default  reduce using rule 32 (PRIM_E)


state 109

   33 PRIM_E: CMD_VAR .

    $default  reduce using rule 33 (PRIM_E)


state 110

   34 PRIM_E: CMD_CONST .

    $default  reduce using rule 34 (PRIM_E)


state 111

   35 PRIM_E: E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 35 (PRIM_E)


state 112

   30 CMD_WHILE: WHILE '(' E . ')' CMD
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 162


state 113

   48 VAR_LET: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 163
    OBJ         go to state 34


state 114

   41 VARs_LET: VAR_LET ',' . VARs_LET

    ID  shift, and go to state 44

    VARs_LET  go to state 164
    VAR_LET   go to state 46


state 115

   50 VAR_VAR: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 165
    OBJ         go to state 34


state 116

   43 VARs_VAR: VAR_VAR ',' . VARs_VAR

    ID  shift, and go to state 47

    VARs_VAR  go to state 166
    VAR_VAR   go to state 49


state 117

   51 VAR_CONST: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 167
    OBJ         go to state 34


state 118

   45 VARs_CONST: VAR_CONST ',' . VARs_CONST

    ID  shift, and go to state 50

    VARs_CONST  go to state 168
    VAR_CONST   go to state 52


state 119

   22 CMD_FUNC: FUNCTION ID $@1 . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 169


state 120

   28 PARAM: ID .
   29      | ID . '=' E

    '='  shift, and go to state 170

    $default  reduce using rule 28 (PARAM)


state 121

   90 E: FUNCTION '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 171


state 122

   36 CMD_IF: IF '(' E . ')' CMD
   37       | IF '(' E . ')' CMD ELSE CMD
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 172


state 123

  105 LISTA_ELEMS: LISTA_ELEMS ',' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 173
    OBJ         go to state 34


state 124

   89 E: '[' LISTA_ELEMS ']' .

    $default  reduce using rule 89 (E)


state 125

   29 PARAM: ID '=' . E
   54 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 174
    OBJ         go to state 34


state 126

   93 E: '(' PARENTESES_FUNCAO SETA . EMPILHA_TS E
   94  | '(' PARENTESES_FUNCAO SETA . '{' EMPILHA_TS CMDs '}'

    '{'  shift, and go to state 175

    '{'       [reduce using rule 17 (EMPILHA_TS)]
    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 176


state 127

   95 E: '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA E
   96  | '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA '{' CMDs '}'

    SETA  shift, and go to state 177


state 128

   26 PARAMs: PARAMs ',' . PARAM

    ID  shift, and go to state 120

    PARAM  go to state 178


state 129

   27 PARAMs: PARAM EMPILHA_TS .

    $default  reduce using rule 27 (PARAMs)


state 130

   86 E: '(' E ')' .

    $default  reduce using rule 86 (E)


state 131

  104 CAMPO: ID ':' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 179
    OBJ         go to state 34


state 132

    2 CMDs: CMDs . CMD
   16 CMD: '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 180

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 133

  101 OBJ: '{' LISTA_CAMPOS '}' .

    $default  reduce using rule 101 (OBJ)


state 134

  102 LISTA_CAMPOS: LISTA_CAMPOS ',' . CAMPO

    ID  shift, and go to state 69

    CAMPO  go to state 181


state 135

   10 CMD: CMD_RET E ';' .

    $default  reduce using rule 10 (CMD)


state 136

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   57 E: LVALUEPROP '=' E .
   60  | E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 57 (E)

    Conflict between rule 57 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 57 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 57 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 57 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 57 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 57 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 57 and token OR resolved as shift ('=' < OR).
    Conflict between rule 57 and token AND resolved as shift ('=' < AND).
    Conflict between rule 57 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 57 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 57 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 57 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 57 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 57 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 57 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 57 and token '.' resolved as shift ('=' < '.').


state 137

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   58 E: LVALUEPROP MAIS_IGUAL E .
   60  | E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 58 (E)

    Conflict between rule 58 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 58 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 58 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 58 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 58 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 58 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 58 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 58 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 58 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 58 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 58 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 58 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 58 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 58 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 58 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 58 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 138

   19 ASM_STRING: ASM_WORD . ASM_STRING

    ASM_WORD  shift, and go to state 138

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 182


state 139

   18 CMD_ASM: ASM ASM_STRING . '}'

    '}'  shift, and go to state 183


state 140

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   60  | E '<' E .
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 60 (E)

    Conflict between rule 60 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 60 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 60 and token IGUAL resolved as shift ('<' < IGUAL).
    Conflict between rule 60 and token DIF resolved as shift ('<' < DIF).
    Conflict between rule 60 and token MA_IG resolved as shift ('<' < MA_IG).
    Conflict between rule 60 and token ME_IG resolved as shift ('<' < ME_IG).
    Conflict between rule 60 and token OR resolved as shift ('<' < OR).
    Conflict between rule 60 and token AND resolved as shift ('<' < AND).
    Conflict between rule 60 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 60 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 60 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 60 and token '[' resolved as shift ('<' < '[').
    Conflict between rule 60 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 60 and token '.' resolved as shift ('<' < '.').


state 141

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   61  | E '>' E .
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 61 (E)

    Conflict between rule 61 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 61 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 61 and token IGUAL resolved as shift ('>' < IGUAL).
    Conflict between rule 61 and token DIF resolved as shift ('>' < DIF).
    Conflict between rule 61 and token MA_IG resolved as shift ('>' < MA_IG).
    Conflict between rule 61 and token ME_IG resolved as shift ('>' < ME_IG).
    Conflict between rule 61 and token OR resolved as shift ('>' < OR).
    Conflict between rule 61 and token AND resolved as shift ('>' < AND).
    Conflict between rule 61 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 61 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 61 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 61 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 61 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 61 and token '[' resolved as shift ('>' < '[').
    Conflict between rule 61 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 61 and token '.' resolved as shift ('>' < '.').


state 142

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   67  | E IGUAL E .
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 67 (E)

    Conflict between rule 67 and token '<' resolved as reduce ('<' < IGUAL).
    Conflict between rule 67 and token '>' resolved as reduce ('>' < IGUAL).
    Conflict between rule 67 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 67 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 67 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 67 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 67 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 67 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 67 and token '+' resolved as shift (IGUAL < '+').
    Conflict between rule 67 and token '-' resolved as shift (IGUAL < '-').
    Conflict between rule 67 and token '*' resolved as shift (IGUAL < '*').
    Conflict between rule 67 and token '/' resolved as shift (IGUAL < '/').
    Conflict between rule 67 and token '%' resolved as shift (IGUAL < '%').
    Conflict between rule 67 and token '[' resolved as shift (IGUAL < '[').
    Conflict between rule 67 and token '(' resolved as shift (IGUAL < '(').
    Conflict between rule 67 and token '.' resolved as shift (IGUAL < '.').


state 143

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   66  | E DIF E .
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 66 (E)

    Conflict between rule 66 and token '<' resolved as reduce ('<' < DIF).
    Conflict between rule 66 and token '>' resolved as reduce ('>' < DIF).
    Conflict between rule 66 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 66 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 66 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 66 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 66 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 66 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 66 and token '+' resolved as shift (DIF < '+').
    Conflict between rule 66 and token '-' resolved as shift (DIF < '-').
    Conflict between rule 66 and token '*' resolved as shift (DIF < '*').
    Conflict between rule 66 and token '/' resolved as shift (DIF < '/').
    Conflict between rule 66 and token '%' resolved as shift (DIF < '%').
    Conflict between rule 66 and token '[' resolved as shift (DIF < '[').
    Conflict between rule 66 and token '(' resolved as shift (DIF < '(').
    Conflict between rule 66 and token '.' resolved as shift (DIF < '.').


state 144

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   65  | E MA_IG E .
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 65 (E)

    Conflict between rule 65 and token '<' resolved as reduce ('<' < MA_IG).
    Conflict between rule 65 and token '>' resolved as reduce ('>' < MA_IG).
    Conflict between rule 65 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 65 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 65 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 65 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 65 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 65 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 65 and token '+' resolved as shift (MA_IG < '+').
    Conflict between rule 65 and token '-' resolved as shift (MA_IG < '-').
    Conflict between rule 65 and token '*' resolved as shift (MA_IG < '*').
    Conflict between rule 65 and token '/' resolved as shift (MA_IG < '/').
    Conflict between rule 65 and token '%' resolved as shift (MA_IG < '%').
    Conflict between rule 65 and token '[' resolved as shift (MA_IG < '[').
    Conflict between rule 65 and token '(' resolved as shift (MA_IG < '(').
    Conflict between rule 65 and token '.' resolved as shift (MA_IG < '.').


state 145

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   64  | E ME_IG E .
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 64 (E)

    Conflict between rule 64 and token '<' resolved as reduce ('<' < ME_IG).
    Conflict between rule 64 and token '>' resolved as reduce ('>' < ME_IG).
    Conflict between rule 64 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 64 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 64 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 64 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 64 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 64 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 64 and token '+' resolved as shift (ME_IG < '+').
    Conflict between rule 64 and token '-' resolved as shift (ME_IG < '-').
    Conflict between rule 64 and token '*' resolved as shift (ME_IG < '*').
    Conflict between rule 64 and token '/' resolved as shift (ME_IG < '/').
    Conflict between rule 64 and token '%' resolved as shift (ME_IG < '%').
    Conflict between rule 64 and token '[' resolved as shift (ME_IG < '[').
    Conflict between rule 64 and token '(' resolved as shift (ME_IG < '(').
    Conflict between rule 64 and token '.' resolved as shift (ME_IG < '.').


state 146

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   63  | E OR E .
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 63 (E)

    Conflict between rule 63 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 63 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 63 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 63 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 63 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 63 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 63 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 63 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 63 and token '+' resolved as shift (OR < '+').
    Conflict between rule 63 and token '-' resolved as shift (OR < '-').
    Conflict between rule 63 and token '*' resolved as shift (OR < '*').
    Conflict between rule 63 and token '/' resolved as shift (OR < '/').
    Conflict between rule 63 and token '%' resolved as shift (OR < '%').
    Conflict between rule 63 and token '[' resolved as shift (OR < '[').
    Conflict between rule 63 and token '(' resolved as shift (OR < '(').
    Conflict between rule 63 and token '.' resolved as shift (OR < '.').


state 147

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   62  | E AND E .
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 62 (E)

    Conflict between rule 62 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 62 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 62 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 62 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 62 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 62 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 62 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 62 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 62 and token '+' resolved as shift (AND < '+').
    Conflict between rule 62 and token '-' resolved as shift (AND < '-').
    Conflict between rule 62 and token '*' resolved as shift (AND < '*').
    Conflict between rule 62 and token '/' resolved as shift (AND < '/').
    Conflict between rule 62 and token '%' resolved as shift (AND < '%').
    Conflict between rule 62 and token '[' resolved as shift (AND < '[').
    Conflict between rule 62 and token '(' resolved as shift (AND < '(').
    Conflict between rule 62 and token '.' resolved as shift (AND < '.').


state 148

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   68  | E '+' E .
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 68 (E)

    Conflict between rule 68 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 68 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 68 and token IGUAL resolved as reduce (IGUAL < '+').
    Conflict between rule 68 and token DIF resolved as reduce (DIF < '+').
    Conflict between rule 68 and token MA_IG resolved as reduce (MA_IG < '+').
    Conflict between rule 68 and token ME_IG resolved as reduce (ME_IG < '+').
    Conflict between rule 68 and token OR resolved as reduce (OR < '+').
    Conflict between rule 68 and token AND resolved as reduce (AND < '+').
    Conflict between rule 68 and token '+' resolved as reduce (%left '+').
    Conflict between rule 68 and token '-' resolved as reduce (%left '-').
    Conflict between rule 68 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 68 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 68 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 68 and token '[' resolved as shift ('+' < '[').
    Conflict between rule 68 and token '(' resolved as shift ('+' < '(').
    Conflict between rule 68 and token '.' resolved as shift ('+' < '.').


state 149

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   69  | E '-' E .
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 69 (E)

    Conflict between rule 69 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 69 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 69 and token IGUAL resolved as reduce (IGUAL < '-').
    Conflict between rule 69 and token DIF resolved as reduce (DIF < '-').
    Conflict between rule 69 and token MA_IG resolved as reduce (MA_IG < '-').
    Conflict between rule 69 and token ME_IG resolved as reduce (ME_IG < '-').
    Conflict between rule 69 and token OR resolved as reduce (OR < '-').
    Conflict between rule 69 and token AND resolved as reduce (AND < '-').
    Conflict between rule 69 and token '+' resolved as reduce (%left '+').
    Conflict between rule 69 and token '-' resolved as reduce (%left '-').
    Conflict between rule 69 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 69 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 69 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 69 and token '[' resolved as shift ('-' < '[').
    Conflict between rule 69 and token '(' resolved as shift ('-' < '(').
    Conflict between rule 69 and token '.' resolved as shift ('-' < '.').


state 150

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   70  | E '*' E .
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 70 (E)

    Conflict between rule 70 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 70 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 70 and token IGUAL resolved as reduce (IGUAL < '*').
    Conflict between rule 70 and token DIF resolved as reduce (DIF < '*').
    Conflict between rule 70 and token MA_IG resolved as reduce (MA_IG < '*').
    Conflict between rule 70 and token ME_IG resolved as reduce (ME_IG < '*').
    Conflict between rule 70 and token OR resolved as reduce (OR < '*').
    Conflict between rule 70 and token AND resolved as reduce (AND < '*').
    Conflict between rule 70 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 70 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 70 and token '*' resolved as reduce (%left '*').
    Conflict between rule 70 and token '/' resolved as reduce (%left '/').
    Conflict between rule 70 and token '%' resolved as reduce (%left '%').
    Conflict between rule 70 and token '[' resolved as shift ('*' < '[').
    Conflict between rule 70 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 70 and token '.' resolved as shift ('*' < '.').


state 151

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   71  | E '/' E .
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 71 (E)

    Conflict between rule 71 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 71 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 71 and token IGUAL resolved as reduce (IGUAL < '/').
    Conflict between rule 71 and token DIF resolved as reduce (DIF < '/').
    Conflict between rule 71 and token MA_IG resolved as reduce (MA_IG < '/').
    Conflict between rule 71 and token ME_IG resolved as reduce (ME_IG < '/').
    Conflict between rule 71 and token OR resolved as reduce (OR < '/').
    Conflict between rule 71 and token AND resolved as reduce (AND < '/').
    Conflict between rule 71 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 71 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 71 and token '*' resolved as reduce (%left '*').
    Conflict between rule 71 and token '/' resolved as reduce (%left '/').
    Conflict between rule 71 and token '%' resolved as reduce (%left '%').
    Conflict between rule 71 and token '[' resolved as shift ('/' < '[').
    Conflict between rule 71 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 71 and token '.' resolved as shift ('/' < '.').


state 152

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   72  | E '%' E .
   87  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 72 (E)

    Conflict between rule 72 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 72 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 72 and token IGUAL resolved as reduce (IGUAL < '%').
    Conflict between rule 72 and token DIF resolved as reduce (DIF < '%').
    Conflict between rule 72 and token MA_IG resolved as reduce (MA_IG < '%').
    Conflict between rule 72 and token ME_IG resolved as reduce (ME_IG < '%').
    Conflict between rule 72 and token OR resolved as reduce (OR < '%').
    Conflict between rule 72 and token AND resolved as reduce (AND < '%').
    Conflict between rule 72 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 72 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 72 and token '*' resolved as reduce (%left '*').
    Conflict between rule 72 and token '/' resolved as reduce (%left '/').
    Conflict between rule 72 and token '%' resolved as reduce (%left '%').
    Conflict between rule 72 and token '[' resolved as shift ('%' < '[').
    Conflict between rule 72 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 72 and token '.' resolved as shift ('%' < '.').


state 153

   52 LVALUEPROP: E . '[' E ']'
   52           | E '[' E . ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ']'    shift, and go to state 184


state 154

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
  100 ARGs: E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 100 (ARGs)


state 155

   87 E: E '(' LISTA_ARGs . ')'

    ')'  shift, and go to state 185


state 156

   97 LISTA_ARGs: ARGs .
   99 ARGs: ARGs . ',' E

    ','  shift, and go to state 186

    $default  reduce using rule 97 (LISTA_ARGs)


state 157

   53 LVALUEPROP: E '.' ID .

    $default  reduce using rule 53 (LVALUEPROP)


state 158

   11 CMD: E CMD_ASM ';' .

    $default  reduce using rule 11 (CMD)


state 159

   80 E: '{' . '}'
   92  | ID SETA EMPILHA_TS '{' . CMDs '}'
  101 OBJ: '{' . LISTA_CAMPOS '}'

    ID        shift, and go to state 187
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 70

    CMDs          go to state 188
    CMD           go to state 23
    CMD_FUNC      go to state 24
    CMD_RET       go to state 25
    CMD_WHILE     go to state 26
    CMD_FOR       go to state 27
    CMD_IF        go to state 28
    CMD_LET       go to state 29
    CMD_VAR       go to state 30
    CMD_CONST     go to state 31
    LVALUEPROP    go to state 32
    E             go to state 33
    OBJ           go to state 34
    LISTA_CAMPOS  go to state 72
    CAMPO         go to state 73


state 160

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
   91  | ID SETA EMPILHA_TS E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 91 (E)

    Conflict between rule 91 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 91 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 91 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 91 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 91 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 91 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 91 and token OR resolved as shift (SETA < OR).
    Conflict between rule 91 and token AND resolved as shift (SETA < AND).
    Conflict between rule 91 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 91 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 91 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 91 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 91 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 91 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 91 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 91 and token '.' resolved as shift (SETA < '.').


state 161

   31 CMD_FOR: FOR '(' PRIM_E ';' . E ';' E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 189
    OBJ         go to state 34


state 162

   30 CMD_WHILE: WHILE '(' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 190
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 163

   48 VAR_LET: ID '=' E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 48 (VAR_LET)


state 164

   41 VARs_LET: VAR_LET ',' VARs_LET .

    $default  reduce using rule 41 (VARs_LET)


state 165

   50 VAR_VAR: ID '=' E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 50 (VAR_VAR)


state 166

   43 VARs_VAR: VAR_VAR ',' VARs_VAR .

    $default  reduce using rule 43 (VARs_VAR)


state 167

   51 VAR_CONST: ID '=' E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 51 (VAR_CONST)


state 168

   45 VARs_CONST: VAR_CONST ',' VARs_CONST .

    $default  reduce using rule 45 (VARs_CONST)


state 169

   22 CMD_FUNC: FUNCTION ID $@1 '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 120

    $default  reduce using rule 25 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 191
    PARAMs        go to state 66
    PARAM         go to state 67


state 170

   29 PARAM: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 192
    OBJ         go to state 34


state 171

   90 E: FUNCTION '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 193


state 172

   36 CMD_IF: IF '(' E ')' . CMD
   37       | IF '(' E ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 194
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 173

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
  105 LISTA_ELEMS: LISTA_ELEMS ',' E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 105 (LISTA_ELEMS)


state 174

   29 PARAM: ID '=' E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   54 E: ID '=' E .
   60  | E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    ')'       reduce using rule 54 (E)
    $default  reduce using rule 29 (PARAM)

    Conflict between rule 54 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 54 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 54 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 54 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 54 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 54 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 54 and token OR resolved as shift ('=' < OR).
    Conflict between rule 54 and token AND resolved as shift ('=' < AND).
    Conflict between rule 54 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 54 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 54 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 54 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 54 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 54 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 54 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 54 and token '.' resolved as shift ('=' < '.').


state 175

   94 E: '(' PARENTESES_FUNCAO SETA '{' . EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 195


state 176

   93 E: '(' PARENTESES_FUNCAO SETA EMPILHA_TS . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 196
    OBJ         go to state 34


state 177

   95 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . E
   96  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 197

    LVALUEPROP  go to state 32
    E           go to state 198
    OBJ         go to state 34


state 178

   26 PARAMs: PARAMs ',' PARAM .

    $default  reduce using rule 26 (PARAMs)


state 179

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
  104 CAMPO: ID ':' E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 104 (CAMPO)


state 180

   16 CMD: '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 16 (CMD)


state 181

  102 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO .

    $default  reduce using rule 102 (LISTA_CAMPOS)


state 182

   19 ASM_STRING: ASM_WORD ASM_STRING .

    $default  reduce using rule 19 (ASM_STRING)


state 183

   18 CMD_ASM: ASM ASM_STRING '}' .

    $default  reduce using rule 18 (CMD_ASM)


state 184

   52 LVALUEPROP: E '[' E ']' .

    $default  reduce using rule 52 (LVALUEPROP)


state 185

   87 E: E '(' LISTA_ARGs ')' .

    $default  reduce using rule 87 (E)


state 186

   99 ARGs: ARGs ',' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 199
    OBJ         go to state 34


state 187

   54 E: ID . '=' E
   55  | ID . MAIS_IGUAL E
   56  | ID . MAIS_MAIS
   82  | ID .
   91  | ID . SETA EMPILHA_TS E
   92  | ID . SETA EMPILHA_TS '{' CMDs '}'
  104 CAMPO: ID . ':' E

    '='         shift, and go to state 35
    SETA        shift, and go to state 36
    MAIS_IGUAL  shift, and go to state 37
    MAIS_MAIS   shift, and go to state 38
    ':'         shift, and go to state 131

    $default  reduce using rule 82 (E)


state 188

    2 CMDs: CMDs . CMD
   92 E: ID SETA EMPILHA_TS '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 200

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 189

   31 CMD_FOR: FOR '(' PRIM_E ';' E . ';' E ')' CMD
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 201


state 190

   30 CMD_WHILE: WHILE '(' E ')' CMD .

    $default  reduce using rule 30 (CMD_WHILE)


state 191

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 202


state 192

   29 PARAM: ID '=' E .
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 29 (PARAM)


state 193

   90 E: FUNCTION '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 203
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 194

   36 CMD_IF: IF '(' E ')' CMD .
   37       | IF '(' E ')' CMD . ELSE CMD

    ELSE  shift, and go to state 204

    $default  reduce using rule 36 (CMD_IF)

    Conflict between rule 36 and token ELSE resolved as shift (REDUCE < ELSE).


state 195

   94 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 205
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 196

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
   93  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 93 (E)

    Conflict between rule 93 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 93 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 93 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 93 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 93 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 93 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 93 and token OR resolved as shift (SETA < OR).
    Conflict between rule 93 and token AND resolved as shift (SETA < AND).
    Conflict between rule 93 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 93 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 93 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 93 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 93 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 93 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 93 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 93 and token '.' resolved as shift (SETA < '.').


state 197

   80 E: '{' . '}'
   96  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' . CMDs '}'
  101 OBJ: '{' . LISTA_CAMPOS '}'

    ID        shift, and go to state 187
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 70

    CMDs          go to state 206
    CMD           go to state 23
    CMD_FUNC      go to state 24
    CMD_RET       go to state 25
    CMD_WHILE     go to state 26
    CMD_FOR       go to state 27
    CMD_IF        go to state 28
    CMD_LET       go to state 29
    CMD_VAR       go to state 30
    CMD_CONST     go to state 31
    LVALUEPROP    go to state 32
    E             go to state 33
    OBJ           go to state 34
    LISTA_CAMPOS  go to state 72
    CAMPO         go to state 73


state 198

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
   95  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 95 (E)

    Conflict between rule 95 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 95 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 95 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 95 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 95 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 95 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 95 and token OR resolved as shift (SETA < OR).
    Conflict between rule 95 and token AND resolved as shift (SETA < AND).
    Conflict between rule 95 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 95 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 95 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 95 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 95 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 95 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 95 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 95 and token '.' resolved as shift (SETA < '.').


state 199

   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'
   99 ARGs: ARGs ',' E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 99 (ARGs)


state 200

   92 E: ID SETA EMPILHA_TS '{' CMDs '}' .

    $default  reduce using rule 92 (E)


state 201

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 39
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 40

    LVALUEPROP  go to state 32
    E           go to state 207
    OBJ         go to state 34


state 202

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 208


state 203

    2 CMDs: CMDs . CMD
   90 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 209

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 204

   37 CMD_IF: IF '(' E ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 210
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 205

    2 CMDs: CMDs . CMD
   94 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 211

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 206

    2 CMDs: CMDs . CMD
   96 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 212

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 207

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E . ')' CMD
   52 LVALUEPROP: E . '[' E ']'
   53           | E . '.' ID
   60 E: E . '<' E
   61  | E . '>' E
   62  | E . AND E
   63  | E . OR E
   64  | E . ME_IG E
   65  | E . MA_IG E
   66  | E . DIF E
   67  | E . IGUAL E
   68  | E . '+' E
   69  | E . '-' E
   70  | E . '*' E
   71  | E . '/' E
   72  | E . '%' E
   87  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 213


state 208

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 214
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 209

   90 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 90 (E)


state 210

   37 CMD_IF: IF '(' E ')' CMD ELSE CMD .

    $default  reduce using rule 37 (CMD_IF)


state 211

   94 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 94 (E)


state 212

   96 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}' .

    $default  reduce using rule 96 (E)


state 213

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 215
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 214

    2 CMDs: CMDs . CMD
   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 216

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33
    OBJ         go to state 34


state 215

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD .

    $default  reduce using rule 31 (CMD_FOR)


state 216

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 22 (CMD_FUNC)
