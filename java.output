State 19 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 228 conflicts: 4 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | CMD

    4 CMD: CMD_LET ';'
    5    | CMD_VAR ';'
    6    | CMD_CONST ';'
    7    | CMD_IF
    8    | CMD_FUNC
    9    | CMD_RET ';'
   10    | CMD_RET E ';'
   11    | CMD_RET OBJ ';'
   12    | E CMD_ASM ';'
   13    | PRINT E ';'
   14    | CMD_WHILE
   15    | CMD_FOR
   16    | E ';'
   17    | '{' EMPILHA_TS CMDs '}'

   18 EMPILHA_TS: /* empty */

   19 CMD_ASM: ASM ASM_STRING '}'

   20 ASM_STRING: ASM_WORD ASM_STRING
   21           | /* empty */

   22 $@1: /* empty */

   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   24 CMD_RET: RETURN

   25 LISTA_PARAMs: PARAMs
   26             | /* empty */

   27 PARAMs: PARAMs ',' PARAM
   28       | PARAM EMPILHA_TS

   29 PARAM: ID
   30      | ID '=' E
   31      | ID '=' OBJ

   32 CMD_WHILE: WHILE '(' E ')' CMD

   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E
   34        | FOR '(' PRIM_E ';' E ';' E ')' CMD

   35 PRIM_E: CMD_LET
   36       | CMD_VAR
   37       | CMD_CONST
   38       | E

   39 CMD_IF: IF '(' E ')' CMD
   40       | IF '(' E ')' CMD ELSE CMD

   41 CMD_LET: LET VARs_LET

   42 CMD_VAR: VAR VARs_VAR

   43 CMD_CONST: CONST VARs_CONST

   44 VARs_LET: VAR_LET ',' VARs_LET
   45         | VAR_LET

   46 VARs_VAR: VAR_VAR ',' VARs_VAR
   47         | VAR_VAR

   48 VARs_CONST: VAR_CONST ',' VARs_CONST
   49           | VAR_CONST

   50 VAR_LET: ID
   51        | ID '=' E
   52        | ID '=' OBJ

   53 VAR_VAR: ID
   54        | ID '=' E
   55        | ID '=' OBJ

   56 VAR_CONST: ID '=' E
   57          | ID '=' OBJ

   58 LVALUEPROP: E '[' E ']'
   59           | E '.' ID

   60 E: ID '=' E
   61  | ID MAIS_IGUAL E
   62  | ID MAIS_MAIS
   63  | LVALUEPROP '=' E
   64  | LVALUEPROP MAIS_IGUAL E
   65  | LVALUEPROP MAIS_MAIS
   66  | E '<' E
   67  | E '>' E
   68  | E AND E
   69  | E OR E
   70  | E ME_IG E
   71  | E MA_IG E
   72  | E DIF E
   73  | E IGUAL E
   74  | E '+' E
   75  | E '-' E
   76  | E '*' E
   77  | E '/' E
   78  | E '%' E
   79  | CDOUBLE
   80  | '+' CDOUBLE
   81  | '-' CDOUBLE
   82  | CINT
   83  | '+' CINT
   84  | '-' CINT
   85  | CSTRING
   86  | '{' '}'
   87  | '[' ']'
   88  | ID
   89  | LVALUEPROP
   90  | TRUE_TK
   91  | FALSE_TK
   92  | '(' E ')'
   93  | E '(' LISTA_ARGs ')'
   94  | '(' OBJ ')'
   95  | '[' LISTA_ELEMS ']'
   96  | FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}'
   97  | ID SETA EMPILHA_TS E
   98  | ID SETA EMPILHA_TS '{' CMDs '}'
   99  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E
  100  | '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
  101  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

  103 LISTA_ARGs: ARGs
  104           | /* empty */

  105 ARGs: ARGs ',' ARG
  106     | ARG

  107 ARG: E
  108    | OBJ

  109 OBJ: '{' LISTA_CAMPOS '}'

  110 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO
  111             | CAMPO

  112 CAMPO: ID ':' E
  113      | ID ':' OBJ

  114 LISTA_ELEMS: LISTA_ELEMS ',' ELEM
  115            | ELEM

  116 ELEM: E
  117     | OBJ


Terminals, with rules where they appear

$end (0) 0
'%' (37) 78
'(' (40) 23 32 33 34 39 40 92 93 94 96 99 100 101 102
')' (41) 23 32 33 34 39 40 92 93 94 96
'*' (42) 76
'+' (43) 74 80 83
',' (44) 27 44 46 48 105 110 114
'-' (45) 75 81 84
'.' (46) 59
'/' (47) 77
':' (58) 112 113
';' (59) 4 5 6 9 10 11 12 13 16 33 34
'<' (60) 66
'=' (61) 30 31 51 52 54 55 56 57 60 63
'>' (62) 67
'[' (91) 58 87 95
']' (93) 58 87 95
'{' (123) 17 23 86 96 98 100 102 109
'}' (125) 17 19 23 86 96 98 100 102 109
error (256)
ID (258) 23 29 30 31 50 51 52 53 54 55 56 57 59 60 61 62 88 97 98 112
    113
PRINT (259) 13
FOR (260) 33 34
WHILE (261) 32
ASM (262) 19
ASM_WORD (263) 20
LET (264) 41
VAR (265) 42
CONST (266) 43
FUNCTION (267) 23 96
RETURN (268) 24
TRUE_TK (269) 90
FALSE_TK (270) 91
CDOUBLE (271) 79 80 81
CSTRING (272) 85
CINT (273) 82 83 84
PARENTESES_FUNCAO (274) 99 100 101 102
SETA (275) 97 98 99 100 101 102
MAIS_IGUAL (276) 61 64
MAIS_MAIS (277) 62 65
IGUAL (278) 73
DIF (279) 72
MA_IG (280) 71
ME_IG (281) 70
OR (282) 69
AND (283) 68
IF (284) 39 40
REDUCE (285)
ELSE (286) 40


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
S (51)
    on left: 1, on right: 0
CMDs (52)
    on left: 2 3, on right: 1 2 17 23 96 98 100 102
CMD (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3 32
    34 39 40
EMPILHA_TS (54)
    on left: 18, on right: 17 28 97 98 99 100
CMD_ASM (55)
    on left: 19, on right: 12
ASM_STRING (56)
    on left: 20 21, on right: 19 20
CMD_FUNC (57)
    on left: 23, on right: 8
$@1 (58)
    on left: 22, on right: 23
CMD_RET (59)
    on left: 24, on right: 9 10 11
LISTA_PARAMs (60)
    on left: 25 26, on right: 23 96 101 102
PARAMs (61)
    on left: 27 28, on right: 25 27
PARAM (62)
    on left: 29 30 31, on right: 27 28
CMD_WHILE (63)
    on left: 32, on right: 14
CMD_FOR (64)
    on left: 33 34, on right: 15
PRIM_E (65)
    on left: 35 36 37 38, on right: 33 34
CMD_IF (66)
    on left: 39 40, on right: 7
CMD_LET (67)
    on left: 41, on right: 4 35
CMD_VAR (68)
    on left: 42, on right: 5 36
CMD_CONST (69)
    on left: 43, on right: 6 37
VARs_LET (70)
    on left: 44 45, on right: 41 44
VARs_VAR (71)
    on left: 46 47, on right: 42 46
VARs_CONST (72)
    on left: 48 49, on right: 43 48
VAR_LET (73)
    on left: 50 51 52, on right: 44 45
VAR_VAR (74)
    on left: 53 54 55, on right: 46 47
VAR_CONST (75)
    on left: 56 57, on right: 48 49
LVALUEPROP (76)
    on left: 58 59, on right: 63 64 65 89
E (77)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101 102, on right: 10 12 13 16 30 32 33 34 38 39 40 51 54
    56 58 59 60 61 63 64 66 67 68 69 70 71 72 73 74 75 76 77 78 92
    93 97 99 101 107 112 116
LISTA_ARGs (78)
    on left: 103 104, on right: 93
ARGs (79)
    on left: 105 106, on right: 103 105
ARG (80)
    on left: 107 108, on right: 105 106
OBJ (81)
    on left: 109, on right: 11 31 52 55 57 94 108 113 117
LISTA_CAMPOS (82)
    on left: 110 111, on right: 109 110
CAMPO (83)
    on left: 112 113, on right: 110 111
LISTA_ELEMS (84)
    on left: 114 115, on right: 95 114
ELEM (85)
    on left: 116 117, on right: 114 115


state 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    S           go to state 21
    CMDs        go to state 22
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 1

   60 E: ID . '=' E
   61  | ID . MAIS_IGUAL E
   62  | ID . MAIS_MAIS
   88  | ID .
   97  | ID . SETA EMPILHA_TS E
   98  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 34
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    $default  reduce using rule 88 (E)


state 2

   13 CMD: PRINT . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 40


state 3

   33 CMD_FOR: FOR . '(' PRIM_E ';' E ';' E ')' E
   34        | FOR . '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 41


state 4

   32 CMD_WHILE: WHILE . '(' E ')' CMD

    '('  shift, and go to state 42


state 5

   41 CMD_LET: LET . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 44
    VAR_LET   go to state 45


state 6

   42 CMD_VAR: VAR . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 47
    VAR_VAR   go to state 48


state 7

   43 CMD_CONST: CONST . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 50
    VAR_CONST   go to state 51


state 8

   23 CMD_FUNC: FUNCTION . ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   96 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID   shift, and go to state 52
    '('  shift, and go to state 53


state 9

   24 CMD_RET: RETURN .

    $default  reduce using rule 24 (CMD_RET)


state 10

   90 E: TRUE_TK .

    $default  reduce using rule 90 (E)


state 11

   91 E: FALSE_TK .

    $default  reduce using rule 91 (E)


state 12

   79 E: CDOUBLE .

    $default  reduce using rule 79 (E)


state 13

   85 E: CSTRING .

    $default  reduce using rule 85 (E)


state 14

   82 E: CINT .

    $default  reduce using rule 82 (E)


state 15

   39 CMD_IF: IF . '(' E ')' CMD
   40       | IF . '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 54


state 16

   80 E: '+' . CDOUBLE
   83  | '+' . CINT

    CDOUBLE  shift, and go to state 55
    CINT     shift, and go to state 56


state 17

   81 E: '-' . CDOUBLE
   84  | '-' . CINT

    CDOUBLE  shift, and go to state 57
    CINT     shift, and go to state 58


state 18

   87 E: '[' . ']'
   95  | '[' . LISTA_ELEMS ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59
    ']'       shift, and go to state 60

    LVALUEPROP   go to state 32
    E            go to state 61
    OBJ          go to state 62
    LISTA_ELEMS  go to state 63
    ELEM         go to state 64


state 19

   92 E: '(' . E ')'
   94  | '(' . OBJ ')'
   99  | '(' . PARENTESES_FUNCAO SETA EMPILHA_TS E
  100  | '(' . PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
  101  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA E
  102  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

    ID                 shift, and go to state 65
    FUNCTION           shift, and go to state 38
    TRUE_TK            shift, and go to state 10
    FALSE_TK           shift, and go to state 11
    CDOUBLE            shift, and go to state 12
    CSTRING            shift, and go to state 13
    CINT               shift, and go to state 14
    PARENTESES_FUNCAO  shift, and go to state 66
    '+'                shift, and go to state 16
    '-'                shift, and go to state 17
    '['                shift, and go to state 18
    '('                shift, and go to state 19
    '{'                shift, and go to state 59

    PARENTESES_FUNCAO  [reduce using rule 26 (LISTA_PARAMs)]

    LISTA_PARAMs  go to state 67
    PARAMs        go to state 68
    PARAM         go to state 69
    LVALUEPROP    go to state 32
    E             go to state 70
    OBJ           go to state 71


state 20

   17 CMD: '{' . EMPILHA_TS CMDs '}'
   86 E: '{' . '}'

    '}'  shift, and go to state 72

    $default  reduce using rule 18 (EMPILHA_TS)

    EMPILHA_TS  go to state 73


state 21

    0 $accept: S . $end

    $end  shift, and go to state 74


state 22

    1 S: CMDs .
    2 CMDs: CMDs . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    $default  reduce using rule 1 (S)

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 23

    3 CMDs: CMD .

    $default  reduce using rule 3 (CMDs)


state 24

    8 CMD: CMD_FUNC .

    $default  reduce using rule 8 (CMD)


state 25

    9 CMD: CMD_RET . ';'
   10    | CMD_RET . E ';'
   11    | CMD_RET . OBJ ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 76
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 77
    OBJ         go to state 78


state 26

   14 CMD: CMD_WHILE .

    $default  reduce using rule 14 (CMD)


state 27

   15 CMD: CMD_FOR .

    $default  reduce using rule 15 (CMD)


state 28

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


state 29

    4 CMD: CMD_LET . ';'

    ';'  shift, and go to state 79


state 30

    5 CMD: CMD_VAR . ';'

    ';'  shift, and go to state 80


state 31

    6 CMD: CMD_CONST . ';'

    ';'  shift, and go to state 81


state 32

   63 E: LVALUEPROP . '=' E
   64  | LVALUEPROP . MAIS_IGUAL E
   65  | LVALUEPROP . MAIS_MAIS
   89  | LVALUEPROP .

    '='         shift, and go to state 82
    MAIS_IGUAL  shift, and go to state 83
    MAIS_MAIS   shift, and go to state 84

    $default  reduce using rule 89 (E)


state 33

   12 CMD: E . CMD_ASM ';'
   16    | E . ';'
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 85
    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ';'    shift, and go to state 102

    CMD_ASM  go to state 103


state 34

   60 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 104


state 35

   97 E: ID SETA . EMPILHA_TS E
   98  | ID SETA . EMPILHA_TS '{' CMDs '}'

    $default  reduce using rule 18 (EMPILHA_TS)

    EMPILHA_TS  go to state 105


state 36

   61 E: ID MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 106


state 37

   62 E: ID MAIS_MAIS .

    $default  reduce using rule 62 (E)


state 38

   96 E: FUNCTION . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 53


state 39

   86 E: '{' . '}'

    '}'  shift, and go to state 72


state 40

   13 CMD: PRINT E . ';'
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ';'    shift, and go to state 107


state 41

   33 CMD_FOR: FOR '(' . PRIM_E ';' E ';' E ')' E
   34        | FOR '(' . PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 1
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    PRIM_E      go to state 108
    CMD_LET     go to state 109
    CMD_VAR     go to state 110
    CMD_CONST   go to state 111
    LVALUEPROP  go to state 32
    E           go to state 112


state 42

   32 CMD_WHILE: WHILE '(' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 113


state 43

   50 VAR_LET: ID .
   51        | ID . '=' E
   52        | ID . '=' OBJ

    '='  shift, and go to state 114

    $default  reduce using rule 50 (VAR_LET)


state 44

   41 CMD_LET: LET VARs_LET .

    $default  reduce using rule 41 (CMD_LET)


state 45

   44 VARs_LET: VAR_LET . ',' VARs_LET
   45         | VAR_LET .

    ','  shift, and go to state 115

    $default  reduce using rule 45 (VARs_LET)


state 46

   53 VAR_VAR: ID .
   54        | ID . '=' E
   55        | ID . '=' OBJ

    '='  shift, and go to state 116

    $default  reduce using rule 53 (VAR_VAR)


state 47

   42 CMD_VAR: VAR VARs_VAR .

    $default  reduce using rule 42 (CMD_VAR)


state 48

   46 VARs_VAR: VAR_VAR . ',' VARs_VAR
   47         | VAR_VAR .

    ','  shift, and go to state 117

    $default  reduce using rule 47 (VARs_VAR)


state 49

   56 VAR_CONST: ID . '=' E
   57          | ID . '=' OBJ

    '='  shift, and go to state 118


state 50

   43 CMD_CONST: CONST VARs_CONST .

    $default  reduce using rule 43 (CMD_CONST)


state 51

   48 VARs_CONST: VAR_CONST . ',' VARs_CONST
   49           | VAR_CONST .

    ','  shift, and go to state 119

    $default  reduce using rule 49 (VARs_CONST)


state 52

   23 CMD_FUNC: FUNCTION ID . $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 22 ($@1)

    $@1  go to state 120


state 53

   96 E: FUNCTION '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 121

    $default  reduce using rule 26 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 122
    PARAMs        go to state 68
    PARAM         go to state 69


state 54

   39 CMD_IF: IF '(' . E ')' CMD
   40       | IF '(' . E ')' CMD ELSE CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 123


state 55

   80 E: '+' CDOUBLE .

    $default  reduce using rule 80 (E)


state 56

   83 E: '+' CINT .

    $default  reduce using rule 83 (E)


state 57

   81 E: '-' CDOUBLE .

    $default  reduce using rule 81 (E)


state 58

   84 E: '-' CINT .

    $default  reduce using rule 84 (E)


state 59

   86 E: '{' . '}'
  109 OBJ: '{' . LISTA_CAMPOS '}'

    ID   shift, and go to state 124
    '}'  shift, and go to state 72

    LISTA_CAMPOS  go to state 125
    CAMPO         go to state 126


state 60

   87 E: '[' ']' .

    $default  reduce using rule 87 (E)


state 61

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  116 ELEM: E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 116 (ELEM)


state 62

  117 ELEM: OBJ .

    $default  reduce using rule 117 (ELEM)


state 63

   95 E: '[' LISTA_ELEMS . ']'
  114 LISTA_ELEMS: LISTA_ELEMS . ',' ELEM

    ','  shift, and go to state 127
    ']'  shift, and go to state 128


state 64

  115 LISTA_ELEMS: ELEM .

    $default  reduce using rule 115 (LISTA_ELEMS)


state 65

   29 PARAM: ID .
   30      | ID . '=' E
   31      | ID . '=' OBJ
   60 E: ID . '=' E
   61  | ID . MAIS_IGUAL E
   62  | ID . MAIS_MAIS
   88  | ID .
   97  | ID . SETA EMPILHA_TS E
   98  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 129
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    PARENTESES_FUNCAO  reduce using rule 29 (PARAM)
    ','                reduce using rule 29 (PARAM)
    $default           reduce using rule 88 (E)


state 66

   99 E: '(' PARENTESES_FUNCAO . SETA EMPILHA_TS E
  100  | '(' PARENTESES_FUNCAO . SETA '{' EMPILHA_TS CMDs '}'

    SETA  shift, and go to state 130


state 67

  101 E: '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA E
  102  | '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA '{' CMDs '}'

    PARENTESES_FUNCAO  shift, and go to state 131


state 68

   25 LISTA_PARAMs: PARAMs .
   27 PARAMs: PARAMs . ',' PARAM

    ','  shift, and go to state 132

    $default  reduce using rule 25 (LISTA_PARAMs)


state 69

   28 PARAMs: PARAM . EMPILHA_TS

    $default  reduce using rule 18 (EMPILHA_TS)

    EMPILHA_TS  go to state 133


state 70

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   92  | '(' E . ')'
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ')'    shift, and go to state 134


state 71

   94 E: '(' OBJ . ')'

    ')'  shift, and go to state 135


state 72

   86 E: '{' '}' .

    $default  reduce using rule 86 (E)


state 73

   17 CMD: '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 136
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 74

    0 $accept: S $end .

    $default  accept


state 75

    2 CMDs: CMDs CMD .

    $default  reduce using rule 2 (CMDs)


state 76

    9 CMD: CMD_RET ';' .

    $default  reduce using rule 9 (CMD)


state 77

   10 CMD: CMD_RET E . ';'
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ';'    shift, and go to state 137


state 78

   11 CMD: CMD_RET OBJ . ';'

    ';'  shift, and go to state 138


state 79

    4 CMD: CMD_LET ';' .

    $default  reduce using rule 4 (CMD)


state 80

    5 CMD: CMD_VAR ';' .

    $default  reduce using rule 5 (CMD)


state 81

    6 CMD: CMD_CONST ';' .

    $default  reduce using rule 6 (CMD)


state 82

   63 E: LVALUEPROP '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 139


state 83

   64 E: LVALUEPROP MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 140


state 84

   65 E: LVALUEPROP MAIS_MAIS .

    $default  reduce using rule 65 (E)


state 85

   19 CMD_ASM: ASM . ASM_STRING '}'

    ASM_WORD  shift, and go to state 141

    $default  reduce using rule 21 (ASM_STRING)

    ASM_STRING  go to state 142


state 86

   66 E: E '<' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 143


state 87

   67 E: E '>' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 144


state 88

   73 E: E IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 145


state 89

   72 E: E DIF . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 146


state 90

   71 E: E MA_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 147


state 91

   70 E: E ME_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 148


state 92

   69 E: E OR . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 149


state 93

   68 E: E AND . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 150


state 94

   74 E: E '+' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 151


state 95

   75 E: E '-' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 152


state 96

   76 E: E '*' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 153


state 97

   77 E: E '/' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 154


state 98

   78 E: E '%' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 155


state 99

   58 LVALUEPROP: E '[' . E ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 156


state 100

   93 E: E '(' . LISTA_ARGs ')'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    $default  reduce using rule 104 (LISTA_ARGs)

    LVALUEPROP  go to state 32
    E           go to state 157
    LISTA_ARGs  go to state 158
    ARGs        go to state 159
    ARG         go to state 160
    OBJ         go to state 161


state 101

   59 LVALUEPROP: E '.' . ID

    ID  shift, and go to state 162


state 102

   16 CMD: E ';' .

    $default  reduce using rule 16 (CMD)


state 103

   12 CMD: E CMD_ASM . ';'

    ';'  shift, and go to state 163


state 104

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   60 E: ID '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 60 (E)

    Conflict between rule 60 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 60 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 60 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 60 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 60 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 60 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 60 and token OR resolved as shift ('=' < OR).
    Conflict between rule 60 and token AND resolved as shift ('=' < AND).
    Conflict between rule 60 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 60 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 60 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 60 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 60 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 60 and token '.' resolved as shift ('=' < '.').


state 105

   97 E: ID SETA EMPILHA_TS . E
   98  | ID SETA EMPILHA_TS . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 164

    LVALUEPROP  go to state 32
    E           go to state 165


state 106

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   61 E: ID MAIS_IGUAL E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 61 (E)

    Conflict between rule 61 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 61 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 61 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 61 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 61 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 61 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 61 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 61 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 61 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 61 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 61 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 61 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 61 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 61 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 61 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 61 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 107

   13 CMD: PRINT E ';' .

    $default  reduce using rule 13 (CMD)


state 108

   33 CMD_FOR: FOR '(' PRIM_E . ';' E ';' E ')' E
   34        | FOR '(' PRIM_E . ';' E ';' E ')' CMD

    ';'  shift, and go to state 166


state 109

   35 PRIM_E: CMD_LET .

    $default  reduce using rule 35 (PRIM_E)


state 110

   36 PRIM_E: CMD_VAR .

    $default  reduce using rule 36 (PRIM_E)


state 111

   37 PRIM_E: CMD_CONST .

    $default  reduce using rule 37 (PRIM_E)


state 112

   38 PRIM_E: E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 38 (PRIM_E)


state 113

   32 CMD_WHILE: WHILE '(' E . ')' CMD
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ')'    shift, and go to state 167


state 114

   51 VAR_LET: ID '=' . E
   52        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 168
    OBJ         go to state 169


state 115

   44 VARs_LET: VAR_LET ',' . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 170
    VAR_LET   go to state 45


state 116

   54 VAR_VAR: ID '=' . E
   55        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 171
    OBJ         go to state 172


state 117

   46 VARs_VAR: VAR_VAR ',' . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 173
    VAR_VAR   go to state 48


state 118

   56 VAR_CONST: ID '=' . E
   57          | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 174
    OBJ         go to state 175


state 119

   48 VARs_CONST: VAR_CONST ',' . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 176
    VAR_CONST   go to state 51


state 120

   23 CMD_FUNC: FUNCTION ID $@1 . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 177


state 121

   29 PARAM: ID .
   30      | ID . '=' E
   31      | ID . '=' OBJ

    '='  shift, and go to state 178

    $default  reduce using rule 29 (PARAM)


state 122

   96 E: FUNCTION '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 179


state 123

   39 CMD_IF: IF '(' E . ')' CMD
   40       | IF '(' E . ')' CMD ELSE CMD
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ')'    shift, and go to state 180


state 124

  112 CAMPO: ID . ':' E
  113      | ID . ':' OBJ

    ':'  shift, and go to state 181


state 125

  109 OBJ: '{' LISTA_CAMPOS . '}'
  110 LISTA_CAMPOS: LISTA_CAMPOS . ',' CAMPO

    '}'  shift, and go to state 182
    ','  shift, and go to state 183


state 126

  111 LISTA_CAMPOS: CAMPO .

    $default  reduce using rule 111 (LISTA_CAMPOS)


state 127

  114 LISTA_ELEMS: LISTA_ELEMS ',' . ELEM

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 61
    OBJ         go to state 62
    ELEM        go to state 184


state 128

   95 E: '[' LISTA_ELEMS ']' .

    $default  reduce using rule 95 (E)


state 129

   30 PARAM: ID '=' . E
   31      | ID '=' . OBJ
   60 E: ID '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 185
    OBJ         go to state 186


state 130

   99 E: '(' PARENTESES_FUNCAO SETA . EMPILHA_TS E
  100  | '(' PARENTESES_FUNCAO SETA . '{' EMPILHA_TS CMDs '}'

    '{'  shift, and go to state 187

    '{'       [reduce using rule 18 (EMPILHA_TS)]
    $default  reduce using rule 18 (EMPILHA_TS)

    EMPILHA_TS  go to state 188


state 131

  101 E: '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA E
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA '{' CMDs '}'

    SETA  shift, and go to state 189


state 132

   27 PARAMs: PARAMs ',' . PARAM

    ID  shift, and go to state 121

    PARAM  go to state 190


state 133

   28 PARAMs: PARAM EMPILHA_TS .

    $default  reduce using rule 28 (PARAMs)


state 134

   92 E: '(' E ')' .

    $default  reduce using rule 92 (E)


state 135

   94 E: '(' OBJ ')' .

    $default  reduce using rule 94 (E)


state 136

    2 CMDs: CMDs . CMD
   17 CMD: '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 191

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 137

   10 CMD: CMD_RET E ';' .

    $default  reduce using rule 10 (CMD)


state 138

   11 CMD: CMD_RET OBJ ';' .

    $default  reduce using rule 11 (CMD)


state 139

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   63 E: LVALUEPROP '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 63 (E)

    Conflict between rule 63 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 63 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 63 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 63 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 63 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 63 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 63 and token OR resolved as shift ('=' < OR).
    Conflict between rule 63 and token AND resolved as shift ('=' < AND).
    Conflict between rule 63 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 63 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 63 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 63 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 63 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 63 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 63 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 63 and token '.' resolved as shift ('=' < '.').


state 140

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   64 E: LVALUEPROP MAIS_IGUAL E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 64 (E)

    Conflict between rule 64 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 64 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 64 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 64 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 64 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 64 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 64 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 64 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 64 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 64 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 64 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 64 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 64 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 64 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 64 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 64 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 141

   20 ASM_STRING: ASM_WORD . ASM_STRING

    ASM_WORD  shift, and go to state 141

    $default  reduce using rule 21 (ASM_STRING)

    ASM_STRING  go to state 192


state 142

   19 CMD_ASM: ASM ASM_STRING . '}'

    '}'  shift, and go to state 193


state 143

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   66  | E '<' E .
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 66 (E)

    Conflict between rule 66 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 66 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 66 and token IGUAL resolved as shift ('<' < IGUAL).
    Conflict between rule 66 and token DIF resolved as shift ('<' < DIF).
    Conflict between rule 66 and token MA_IG resolved as shift ('<' < MA_IG).
    Conflict between rule 66 and token ME_IG resolved as shift ('<' < ME_IG).
    Conflict between rule 66 and token OR resolved as shift ('<' < OR).
    Conflict between rule 66 and token AND resolved as shift ('<' < AND).
    Conflict between rule 66 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 66 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 66 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 66 and token '[' resolved as shift ('<' < '[').
    Conflict between rule 66 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 66 and token '.' resolved as shift ('<' < '.').


state 144

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   67  | E '>' E .
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 67 (E)

    Conflict between rule 67 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 67 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 67 and token IGUAL resolved as shift ('>' < IGUAL).
    Conflict between rule 67 and token DIF resolved as shift ('>' < DIF).
    Conflict between rule 67 and token MA_IG resolved as shift ('>' < MA_IG).
    Conflict between rule 67 and token ME_IG resolved as shift ('>' < ME_IG).
    Conflict between rule 67 and token OR resolved as shift ('>' < OR).
    Conflict between rule 67 and token AND resolved as shift ('>' < AND).
    Conflict between rule 67 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 67 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 67 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 67 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 67 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 67 and token '[' resolved as shift ('>' < '[').
    Conflict between rule 67 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 67 and token '.' resolved as shift ('>' < '.').


state 145

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   73  | E IGUAL E .
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 73 (E)

    Conflict between rule 73 and token '<' resolved as reduce ('<' < IGUAL).
    Conflict between rule 73 and token '>' resolved as reduce ('>' < IGUAL).
    Conflict between rule 73 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 73 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 73 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 73 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 73 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 73 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 73 and token '+' resolved as shift (IGUAL < '+').
    Conflict between rule 73 and token '-' resolved as shift (IGUAL < '-').
    Conflict between rule 73 and token '*' resolved as shift (IGUAL < '*').
    Conflict between rule 73 and token '/' resolved as shift (IGUAL < '/').
    Conflict between rule 73 and token '%' resolved as shift (IGUAL < '%').
    Conflict between rule 73 and token '[' resolved as shift (IGUAL < '[').
    Conflict between rule 73 and token '(' resolved as shift (IGUAL < '(').
    Conflict between rule 73 and token '.' resolved as shift (IGUAL < '.').


state 146

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   72  | E DIF E .
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 72 (E)

    Conflict between rule 72 and token '<' resolved as reduce ('<' < DIF).
    Conflict between rule 72 and token '>' resolved as reduce ('>' < DIF).
    Conflict between rule 72 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 72 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 72 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 72 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 72 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 72 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 72 and token '+' resolved as shift (DIF < '+').
    Conflict between rule 72 and token '-' resolved as shift (DIF < '-').
    Conflict between rule 72 and token '*' resolved as shift (DIF < '*').
    Conflict between rule 72 and token '/' resolved as shift (DIF < '/').
    Conflict between rule 72 and token '%' resolved as shift (DIF < '%').
    Conflict between rule 72 and token '[' resolved as shift (DIF < '[').
    Conflict between rule 72 and token '(' resolved as shift (DIF < '(').
    Conflict between rule 72 and token '.' resolved as shift (DIF < '.').


state 147

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   71  | E MA_IG E .
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 71 (E)

    Conflict between rule 71 and token '<' resolved as reduce ('<' < MA_IG).
    Conflict between rule 71 and token '>' resolved as reduce ('>' < MA_IG).
    Conflict between rule 71 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 71 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 71 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 71 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 71 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 71 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 71 and token '+' resolved as shift (MA_IG < '+').
    Conflict between rule 71 and token '-' resolved as shift (MA_IG < '-').
    Conflict between rule 71 and token '*' resolved as shift (MA_IG < '*').
    Conflict between rule 71 and token '/' resolved as shift (MA_IG < '/').
    Conflict between rule 71 and token '%' resolved as shift (MA_IG < '%').
    Conflict between rule 71 and token '[' resolved as shift (MA_IG < '[').
    Conflict between rule 71 and token '(' resolved as shift (MA_IG < '(').
    Conflict between rule 71 and token '.' resolved as shift (MA_IG < '.').


state 148

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   70  | E ME_IG E .
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 70 (E)

    Conflict between rule 70 and token '<' resolved as reduce ('<' < ME_IG).
    Conflict between rule 70 and token '>' resolved as reduce ('>' < ME_IG).
    Conflict between rule 70 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 70 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 70 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 70 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 70 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 70 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 70 and token '+' resolved as shift (ME_IG < '+').
    Conflict between rule 70 and token '-' resolved as shift (ME_IG < '-').
    Conflict between rule 70 and token '*' resolved as shift (ME_IG < '*').
    Conflict between rule 70 and token '/' resolved as shift (ME_IG < '/').
    Conflict between rule 70 and token '%' resolved as shift (ME_IG < '%').
    Conflict between rule 70 and token '[' resolved as shift (ME_IG < '[').
    Conflict between rule 70 and token '(' resolved as shift (ME_IG < '(').
    Conflict between rule 70 and token '.' resolved as shift (ME_IG < '.').


state 149

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   69  | E OR E .
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 69 (E)

    Conflict between rule 69 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 69 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 69 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 69 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 69 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 69 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 69 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 69 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 69 and token '+' resolved as shift (OR < '+').
    Conflict between rule 69 and token '-' resolved as shift (OR < '-').
    Conflict between rule 69 and token '*' resolved as shift (OR < '*').
    Conflict between rule 69 and token '/' resolved as shift (OR < '/').
    Conflict between rule 69 and token '%' resolved as shift (OR < '%').
    Conflict between rule 69 and token '[' resolved as shift (OR < '[').
    Conflict between rule 69 and token '(' resolved as shift (OR < '(').
    Conflict between rule 69 and token '.' resolved as shift (OR < '.').


state 150

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   68  | E AND E .
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 68 (E)

    Conflict between rule 68 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 68 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 68 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 68 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 68 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 68 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 68 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 68 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 68 and token '+' resolved as shift (AND < '+').
    Conflict between rule 68 and token '-' resolved as shift (AND < '-').
    Conflict between rule 68 and token '*' resolved as shift (AND < '*').
    Conflict between rule 68 and token '/' resolved as shift (AND < '/').
    Conflict between rule 68 and token '%' resolved as shift (AND < '%').
    Conflict between rule 68 and token '[' resolved as shift (AND < '[').
    Conflict between rule 68 and token '(' resolved as shift (AND < '(').
    Conflict between rule 68 and token '.' resolved as shift (AND < '.').


state 151

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   74  | E '+' E .
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 74 (E)

    Conflict between rule 74 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 74 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 74 and token IGUAL resolved as reduce (IGUAL < '+').
    Conflict between rule 74 and token DIF resolved as reduce (DIF < '+').
    Conflict between rule 74 and token MA_IG resolved as reduce (MA_IG < '+').
    Conflict between rule 74 and token ME_IG resolved as reduce (ME_IG < '+').
    Conflict between rule 74 and token OR resolved as reduce (OR < '+').
    Conflict between rule 74 and token AND resolved as reduce (AND < '+').
    Conflict between rule 74 and token '+' resolved as reduce (%left '+').
    Conflict between rule 74 and token '-' resolved as reduce (%left '-').
    Conflict between rule 74 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 74 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 74 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 74 and token '[' resolved as shift ('+' < '[').
    Conflict between rule 74 and token '(' resolved as shift ('+' < '(').
    Conflict between rule 74 and token '.' resolved as shift ('+' < '.').


state 152

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   75  | E '-' E .
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 75 (E)

    Conflict between rule 75 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 75 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 75 and token IGUAL resolved as reduce (IGUAL < '-').
    Conflict between rule 75 and token DIF resolved as reduce (DIF < '-').
    Conflict between rule 75 and token MA_IG resolved as reduce (MA_IG < '-').
    Conflict between rule 75 and token ME_IG resolved as reduce (ME_IG < '-').
    Conflict between rule 75 and token OR resolved as reduce (OR < '-').
    Conflict between rule 75 and token AND resolved as reduce (AND < '-').
    Conflict between rule 75 and token '+' resolved as reduce (%left '+').
    Conflict between rule 75 and token '-' resolved as reduce (%left '-').
    Conflict between rule 75 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 75 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 75 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 75 and token '[' resolved as shift ('-' < '[').
    Conflict between rule 75 and token '(' resolved as shift ('-' < '(').
    Conflict between rule 75 and token '.' resolved as shift ('-' < '.').


state 153

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   76  | E '*' E .
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 76 (E)

    Conflict between rule 76 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 76 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 76 and token IGUAL resolved as reduce (IGUAL < '*').
    Conflict between rule 76 and token DIF resolved as reduce (DIF < '*').
    Conflict between rule 76 and token MA_IG resolved as reduce (MA_IG < '*').
    Conflict between rule 76 and token ME_IG resolved as reduce (ME_IG < '*').
    Conflict between rule 76 and token OR resolved as reduce (OR < '*').
    Conflict between rule 76 and token AND resolved as reduce (AND < '*').
    Conflict between rule 76 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 76 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 76 and token '*' resolved as reduce (%left '*').
    Conflict between rule 76 and token '/' resolved as reduce (%left '/').
    Conflict between rule 76 and token '%' resolved as reduce (%left '%').
    Conflict between rule 76 and token '[' resolved as shift ('*' < '[').
    Conflict between rule 76 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 76 and token '.' resolved as shift ('*' < '.').


state 154

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   77  | E '/' E .
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 77 (E)

    Conflict between rule 77 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 77 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 77 and token IGUAL resolved as reduce (IGUAL < '/').
    Conflict between rule 77 and token DIF resolved as reduce (DIF < '/').
    Conflict between rule 77 and token MA_IG resolved as reduce (MA_IG < '/').
    Conflict between rule 77 and token ME_IG resolved as reduce (ME_IG < '/').
    Conflict between rule 77 and token OR resolved as reduce (OR < '/').
    Conflict between rule 77 and token AND resolved as reduce (AND < '/').
    Conflict between rule 77 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 77 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 77 and token '*' resolved as reduce (%left '*').
    Conflict between rule 77 and token '/' resolved as reduce (%left '/').
    Conflict between rule 77 and token '%' resolved as reduce (%left '%').
    Conflict between rule 77 and token '[' resolved as shift ('/' < '[').
    Conflict between rule 77 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 77 and token '.' resolved as shift ('/' < '.').


state 155

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   78  | E '%' E .
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 99
    '('  shift, and go to state 100
    '.'  shift, and go to state 101

    $default  reduce using rule 78 (E)

    Conflict between rule 78 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 78 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 78 and token IGUAL resolved as reduce (IGUAL < '%').
    Conflict between rule 78 and token DIF resolved as reduce (DIF < '%').
    Conflict between rule 78 and token MA_IG resolved as reduce (MA_IG < '%').
    Conflict between rule 78 and token ME_IG resolved as reduce (ME_IG < '%').
    Conflict between rule 78 and token OR resolved as reduce (OR < '%').
    Conflict between rule 78 and token AND resolved as reduce (AND < '%').
    Conflict between rule 78 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 78 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 78 and token '*' resolved as reduce (%left '*').
    Conflict between rule 78 and token '/' resolved as reduce (%left '/').
    Conflict between rule 78 and token '%' resolved as reduce (%left '%').
    Conflict between rule 78 and token '[' resolved as shift ('%' < '[').
    Conflict between rule 78 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 78 and token '.' resolved as shift ('%' < '.').


state 156

   58 LVALUEPROP: E . '[' E ']'
   58           | E '[' E . ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ']'    shift, and go to state 194


state 157

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  107 ARG: E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 107 (ARG)


state 158

   93 E: E '(' LISTA_ARGs . ')'

    ')'  shift, and go to state 195


state 159

  103 LISTA_ARGs: ARGs .
  105 ARGs: ARGs . ',' ARG

    ','  shift, and go to state 196

    $default  reduce using rule 103 (LISTA_ARGs)


state 160

  106 ARGs: ARG .

    $default  reduce using rule 106 (ARGs)


state 161

  108 ARG: OBJ .

    $default  reduce using rule 108 (ARG)


state 162

   59 LVALUEPROP: E '.' ID .

    $default  reduce using rule 59 (LVALUEPROP)


state 163

   12 CMD: E CMD_ASM ';' .

    $default  reduce using rule 12 (CMD)


state 164

   86 E: '{' . '}'
   98  | ID SETA EMPILHA_TS '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 72

    CMDs        go to state 197
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 165

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
   97  | ID SETA EMPILHA_TS E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 97 (E)

    Conflict between rule 97 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 97 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 97 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 97 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 97 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 97 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 97 and token OR resolved as shift (SETA < OR).
    Conflict between rule 97 and token AND resolved as shift (SETA < AND).
    Conflict between rule 97 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 97 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 97 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 97 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 97 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 97 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 97 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 97 and token '.' resolved as shift (SETA < '.').


state 166

   33 CMD_FOR: FOR '(' PRIM_E ';' . E ';' E ')' E
   34        | FOR '(' PRIM_E ';' . E ';' E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 198


state 167

   32 CMD_WHILE: WHILE '(' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 199
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 168

   51 VAR_LET: ID '=' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 51 (VAR_LET)


state 169

   52 VAR_LET: ID '=' OBJ .

    $default  reduce using rule 52 (VAR_LET)


state 170

   44 VARs_LET: VAR_LET ',' VARs_LET .

    $default  reduce using rule 44 (VARs_LET)


state 171

   54 VAR_VAR: ID '=' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 54 (VAR_VAR)


state 172

   55 VAR_VAR: ID '=' OBJ .

    $default  reduce using rule 55 (VAR_VAR)


state 173

   46 VARs_VAR: VAR_VAR ',' VARs_VAR .

    $default  reduce using rule 46 (VARs_VAR)


state 174

   56 VAR_CONST: ID '=' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 56 (VAR_CONST)


state 175

   57 VAR_CONST: ID '=' OBJ .

    $default  reduce using rule 57 (VAR_CONST)


state 176

   48 VARs_CONST: VAR_CONST ',' VARs_CONST .

    $default  reduce using rule 48 (VARs_CONST)


state 177

   23 CMD_FUNC: FUNCTION ID $@1 '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 121

    $default  reduce using rule 26 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 200
    PARAMs        go to state 68
    PARAM         go to state 69


state 178

   30 PARAM: ID '=' . E
   31      | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 201
    OBJ         go to state 186


state 179

   96 E: FUNCTION '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 202


state 180

   39 CMD_IF: IF '(' E ')' . CMD
   40       | IF '(' E ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 203
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 181

  112 CAMPO: ID ':' . E
  113      | ID ':' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 204
    OBJ         go to state 205


state 182

  109 OBJ: '{' LISTA_CAMPOS '}' .

    $default  reduce using rule 109 (OBJ)


state 183

  110 LISTA_CAMPOS: LISTA_CAMPOS ',' . CAMPO

    ID  shift, and go to state 124

    CAMPO  go to state 206


state 184

  114 LISTA_ELEMS: LISTA_ELEMS ',' ELEM .

    $default  reduce using rule 114 (LISTA_ELEMS)


state 185

   30 PARAM: ID '=' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   60 E: ID '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    ')'       reduce using rule 60 (E)
    $default  reduce using rule 30 (PARAM)

    Conflict between rule 60 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 60 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 60 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 60 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 60 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 60 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 60 and token OR resolved as shift ('=' < OR).
    Conflict between rule 60 and token AND resolved as shift ('=' < AND).
    Conflict between rule 60 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 60 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 60 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 60 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 60 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 60 and token '.' resolved as shift ('=' < '.').


state 186

   31 PARAM: ID '=' OBJ .

    $default  reduce using rule 31 (PARAM)


state 187

  100 E: '(' PARENTESES_FUNCAO SETA '{' . EMPILHA_TS CMDs '}'

    $default  reduce using rule 18 (EMPILHA_TS)

    EMPILHA_TS  go to state 207


state 188

   99 E: '(' PARENTESES_FUNCAO SETA EMPILHA_TS . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 208


state 189

  101 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . E
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 209

    LVALUEPROP  go to state 32
    E           go to state 210


state 190

   27 PARAMs: PARAMs ',' PARAM .

    $default  reduce using rule 27 (PARAMs)


state 191

   17 CMD: '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 17 (CMD)


state 192

   20 ASM_STRING: ASM_WORD ASM_STRING .

    $default  reduce using rule 20 (ASM_STRING)


state 193

   19 CMD_ASM: ASM ASM_STRING '}' .

    $default  reduce using rule 19 (CMD_ASM)


state 194

   58 LVALUEPROP: E '[' E ']' .

    $default  reduce using rule 58 (LVALUEPROP)


state 195

   93 E: E '(' LISTA_ARGs ')' .

    $default  reduce using rule 93 (E)


state 196

  105 ARGs: ARGs ',' . ARG

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 157
    ARG         go to state 211
    OBJ         go to state 161


state 197

    2 CMDs: CMDs . CMD
   98 E: ID SETA EMPILHA_TS '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 212

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 198

   33 CMD_FOR: FOR '(' PRIM_E ';' E . ';' E ')' E
   34        | FOR '(' PRIM_E ';' E . ';' E ')' CMD
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ';'    shift, and go to state 213


state 199

   32 CMD_WHILE: WHILE '(' E ')' CMD .

    $default  reduce using rule 32 (CMD_WHILE)


state 200

   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 214


state 201

   30 PARAM: ID '=' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 30 (PARAM)


state 202

   96 E: FUNCTION '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 215
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 203

   39 CMD_IF: IF '(' E ')' CMD .
   40       | IF '(' E ')' CMD . ELSE CMD

    ELSE  shift, and go to state 216

    $default  reduce using rule 39 (CMD_IF)

    Conflict between rule 39 and token ELSE resolved as shift (REDUCE < ELSE).


state 204

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  112 CAMPO: ID ':' E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 112 (CAMPO)


state 205

  113 CAMPO: ID ':' OBJ .

    $default  reduce using rule 113 (CAMPO)


state 206

  110 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO .

    $default  reduce using rule 110 (LISTA_CAMPOS)


state 207

  100 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 217
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 208

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
   99  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 99 (E)

    Conflict between rule 99 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 99 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 99 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 99 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 99 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 99 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 99 and token OR resolved as shift (SETA < OR).
    Conflict between rule 99 and token AND resolved as shift (SETA < AND).
    Conflict between rule 99 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 99 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 99 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 99 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 99 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 99 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 99 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 99 and token '.' resolved as shift (SETA < '.').


state 209

   86 E: '{' . '}'
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 72

    CMDs        go to state 218
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 210

   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  101  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E .

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101

    $default  reduce using rule 101 (E)

    Conflict between rule 101 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 101 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 101 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 101 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 101 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 101 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 101 and token OR resolved as shift (SETA < OR).
    Conflict between rule 101 and token AND resolved as shift (SETA < AND).
    Conflict between rule 101 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 101 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 101 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 101 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 101 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 101 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 101 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 101 and token '.' resolved as shift (SETA < '.').


state 211

  105 ARGs: ARGs ',' ARG .

    $default  reduce using rule 105 (ARGs)


state 212

   98 E: ID SETA EMPILHA_TS '{' CMDs '}' .

    $default  reduce using rule 98 (E)


state 213

   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' . E ')' E
   34        | FOR '(' PRIM_E ';' E ';' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 219


state 214

   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 220


state 215

    2 CMDs: CMDs . CMD
   96 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 221

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 216

   40 CMD_IF: IF '(' E ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 222
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 217

    2 CMDs: CMDs . CMD
  100 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 223

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 218

    2 CMDs: CMDs . CMD
  102 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 224

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 219

   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' E . ')' E
   34        | FOR '(' PRIM_E ';' E ';' E . ')' CMD
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ')'    shift, and go to state 225


state 220

   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 226
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 221

   96 E: FUNCTION '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 96 (E)


state 222

   40 CMD_IF: IF '(' E ')' CMD ELSE CMD .

    $default  reduce using rule 40 (CMD_IF)


state 223

  100 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 100 (E)


state 224

  102 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}' .

    $default  reduce using rule 102 (E)


state 225

   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' . E
   34        | FOR '(' PRIM_E ';' E ';' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 227
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 228


state 226

    2 CMDs: CMDs . CMD
   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 229

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 227

   34 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD .

    $default  reduce using rule 34 (CMD_FOR)


state 228

   12 CMD: E . CMD_ASM ';'
   16    | E . ';'
   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E .
   58 LVALUEPROP: E . '[' E ']'
   59           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 85
    '<'    shift, and go to state 86
    '>'    shift, and go to state 87
    IGUAL  shift, and go to state 88
    DIF    shift, and go to state 89
    MA_IG  shift, and go to state 90
    ME_IG  shift, and go to state 91
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    '+'    shift, and go to state 94
    '-'    shift, and go to state 95
    '*'    shift, and go to state 96
    '/'    shift, and go to state 97
    '%'    shift, and go to state 98
    '['    shift, and go to state 99
    '('    shift, and go to state 100
    '.'    shift, and go to state 101
    ';'    shift, and go to state 102

    '+'       [reduce using rule 33 (CMD_FOR)]
    '-'       [reduce using rule 33 (CMD_FOR)]
    '['       [reduce using rule 33 (CMD_FOR)]
    '('       [reduce using rule 33 (CMD_FOR)]
    $default  reduce using rule 33 (CMD_FOR)

    CMD_ASM  go to state 103


state 229

   23 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 23 (CMD_FUNC)
