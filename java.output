State 19 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 229 conflicts: 4 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | CMD

    4 CMD: CMD_LET ';'
    5    | CMD_VAR ';'
    6    | CMD_CONST ';'
    7    | CMD_IF
    8    | CMD_FUNC
    9    | CMD_RET ';'
   10    | CMD_RET E ';'
   11    | E CMD_ASM ';'
   12    | PRINT E ';'
   13    | CMD_WHILE
   14    | CMD_FOR
   15    | E ';'
   16    | '{' EMPILHA_TS CMDs '}'

   17 EMPILHA_TS: /* empty */

   18 CMD_ASM: ASM ASM_STRING '}'

   19 ASM_STRING: ASM_WORD ASM_STRING
   20           | /* empty */

   21 $@1: /* empty */

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   23 CMD_RET: RETURN

   24 LISTA_PARAMs: PARAMs
   25             | /* empty */

   26 PARAMs: PARAMs ',' PARAM
   27       | PARAM EMPILHA_TS

   28 PARAM: ID
   29      | ID '=' E
   30      | ID '=' OBJ

   31 CMD_WHILE: WHILE '(' E ')' CMD

   32 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E
   33        | FOR '(' PRIM_E ';' E ';' E ')' CMD

   34 PRIM_E: CMD_LET
   35       | CMD_VAR
   36       | CMD_CONST
   37       | E

   38 CMD_IF: IF '(' E ')' CMD
   39       | IF '(' E ')' CMD ELSE CMD

   40 CMD_LET: LET VARs_LET

   41 CMD_VAR: VAR VARs_VAR

   42 CMD_CONST: CONST VARs_CONST

   43 VARs_LET: VAR_LET ',' VARs_LET
   44         | VAR_LET

   45 VARs_VAR: VAR_VAR ',' VARs_VAR
   46         | VAR_VAR

   47 VARs_CONST: VAR_CONST ',' VARs_CONST
   48           | VAR_CONST

   49 VAR_LET: ID
   50        | ID '=' E
   51        | ID '=' OBJ

   52 VAR_VAR: ID
   53        | ID '=' E
   54        | ID '=' OBJ

   55 VAR_CONST: ID '=' E
   56          | ID '=' OBJ

   57 LVALUEPROP: E '[' E ']'
   58           | E '.' ID

   59 E: ID '=' E
   60  | ID '=' OBJ
   61  | ID MAIS_IGUAL E
   62  | ID MAIS_MAIS
   63  | LVALUEPROP '=' E
   64  | LVALUEPROP MAIS_IGUAL E
   65  | LVALUEPROP MAIS_MAIS
   66  | E '<' E
   67  | E '>' E
   68  | E AND E
   69  | E OR E
   70  | E ME_IG E
   71  | E MA_IG E
   72  | E DIF E
   73  | E IGUAL E
   74  | E '+' E
   75  | E '-' E
   76  | E '*' E
   77  | E '/' E
   78  | E '%' E
   79  | CDOUBLE
   80  | '+' CDOUBLE
   81  | '-' CDOUBLE
   82  | CINT
   83  | '+' CINT
   84  | '-' CINT
   85  | CSTRING
   86  | '{' '}'
   87  | '[' ']'
   88  | ID
   89  | LVALUEPROP
   90  | TRUE_TK
   91  | FALSE_TK
   92  | '(' E ')'
   93  | E '(' LISTA_ARGs ')'
   94  | '(' OBJ ')'
   95  | '[' LISTA_ELEMS ']'

   96 $@2: /* empty */

   97 E: FUNCTION $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'
   98  | ID SETA EMPILHA_TS E
   99  | ID SETA EMPILHA_TS '{' CMDs '}'
  100  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E
  101  | '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E
  103  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

  104 LISTA_ARGs: ARGs
  105           | /* empty */

  106 ARGs: ARGs ',' ARG
  107     | ARG

  108 ARG: E
  109    | OBJ

  110 OBJ: '{' LISTA_CAMPOS '}'

  111 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO
  112             | CAMPO

  113 CAMPO: ID ':' E
  114      | ID ':' OBJ

  115 LISTA_ELEMS: LISTA_ELEMS ',' ELEM
  116            | ELEM

  117 ELEM: E
  118     | OBJ


Terminals, with rules where they appear

$end (0) 0
'%' (37) 78
'(' (40) 22 31 32 33 38 39 92 93 94 97 100 101 102 103
')' (41) 22 31 32 33 38 39 92 93 94 97
'*' (42) 76
'+' (43) 74 80 83
',' (44) 26 43 45 47 106 111 115
'-' (45) 75 81 84
'.' (46) 58
'/' (47) 77
':' (58) 113 114
';' (59) 4 5 6 9 10 11 12 15 32 33
'<' (60) 66
'=' (61) 29 30 50 51 53 54 55 56 59 60 63
'>' (62) 67
'[' (91) 57 87 95
']' (93) 57 87 95
'{' (123) 16 22 86 97 99 101 103 110
'}' (125) 16 18 22 86 97 99 101 103 110
error (256)
ID (258) 22 28 29 30 49 50 51 52 53 54 55 56 58 59 60 61 62 88 98 99
    113 114
PRINT (259) 12
FOR (260) 32 33
WHILE (261) 31
ASM (262) 18
ASM_WORD (263) 19
LET (264) 40
VAR (265) 41
CONST (266) 42
FUNCTION (267) 22 97
RETURN (268) 23
TRUE_TK (269) 90
FALSE_TK (270) 91
CDOUBLE (271) 79 80 81
CSTRING (272) 85
CINT (273) 82 83 84
PARENTESES_FUNCAO (274) 100 101 102 103
SETA (275) 98 99 100 101 102 103
MAIS_IGUAL (276) 61 64
MAIS_MAIS (277) 62 65
IGUAL (278) 73
DIF (279) 72
MA_IG (280) 71
ME_IG (281) 70
OR (282) 69
AND (283) 68
IF (284) 38 39
REDUCE (285)
ELSE (286) 39


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
S (51)
    on left: 1, on right: 0
CMDs (52)
    on left: 2 3, on right: 1 2 16 22 97 99 101 103
CMD (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3 31 33
    38 39
EMPILHA_TS (54)
    on left: 17, on right: 16 27 98 99 100 101
CMD_ASM (55)
    on left: 18, on right: 11
ASM_STRING (56)
    on left: 19 20, on right: 18 19
CMD_FUNC (57)
    on left: 22, on right: 8
$@1 (58)
    on left: 21, on right: 22
CMD_RET (59)
    on left: 23, on right: 9 10
LISTA_PARAMs (60)
    on left: 24 25, on right: 22 97 102 103
PARAMs (61)
    on left: 26 27, on right: 24 26
PARAM (62)
    on left: 28 29 30, on right: 26 27
CMD_WHILE (63)
    on left: 31, on right: 13
CMD_FOR (64)
    on left: 32 33, on right: 14
PRIM_E (65)
    on left: 34 35 36 37, on right: 32 33
CMD_IF (66)
    on left: 38 39, on right: 7
CMD_LET (67)
    on left: 40, on right: 4 34
CMD_VAR (68)
    on left: 41, on right: 5 35
CMD_CONST (69)
    on left: 42, on right: 6 36
VARs_LET (70)
    on left: 43 44, on right: 40 43
VARs_VAR (71)
    on left: 45 46, on right: 41 45
VARs_CONST (72)
    on left: 47 48, on right: 42 47
VAR_LET (73)
    on left: 49 50 51, on right: 43 44
VAR_VAR (74)
    on left: 52 53 54, on right: 45 46
VAR_CONST (75)
    on left: 55 56, on right: 47 48
LVALUEPROP (76)
    on left: 57 58, on right: 63 64 65 89
E (77)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 97 98
    99 100 101 102 103, on right: 10 11 12 15 29 31 32 33 37 38 39
    50 53 55 57 58 59 61 63 64 66 67 68 69 70 71 72 73 74 75 76 77
    78 92 93 98 100 102 108 113 117
$@2 (78)
    on left: 96, on right: 97
LISTA_ARGs (79)
    on left: 104 105, on right: 93
ARGs (80)
    on left: 106 107, on right: 104 106
ARG (81)
    on left: 108 109, on right: 106 107
OBJ (82)
    on left: 110, on right: 30 51 54 56 60 94 109 114 118
LISTA_CAMPOS (83)
    on left: 111 112, on right: 110 111
CAMPO (84)
    on left: 113 114, on right: 111 112
LISTA_ELEMS (85)
    on left: 115 116, on right: 95 115
ELEM (86)
    on left: 117 118, on right: 115 116


state 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    S           go to state 21
    CMDs        go to state 22
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 1

   59 E: ID . '=' E
   60  | ID . '=' OBJ
   61  | ID . MAIS_IGUAL E
   62  | ID . MAIS_MAIS
   88  | ID .
   98  | ID . SETA EMPILHA_TS E
   99  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 34
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    $default  reduce using rule 88 (E)


state 2

   12 CMD: PRINT . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 40


state 3

   32 CMD_FOR: FOR . '(' PRIM_E ';' E ';' E ')' E
   33        | FOR . '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 41


state 4

   31 CMD_WHILE: WHILE . '(' E ')' CMD

    '('  shift, and go to state 42


state 5

   40 CMD_LET: LET . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 44
    VAR_LET   go to state 45


state 6

   41 CMD_VAR: VAR . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 47
    VAR_VAR   go to state 48


state 7

   42 CMD_CONST: CONST . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 50
    VAR_CONST   go to state 51


state 8

   22 CMD_FUNC: FUNCTION . ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   97 E: FUNCTION . $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 52

    $default  reduce using rule 96 ($@2)

    $@2  go to state 53


state 9

   23 CMD_RET: RETURN .

    $default  reduce using rule 23 (CMD_RET)


state 10

   90 E: TRUE_TK .

    $default  reduce using rule 90 (E)


state 11

   91 E: FALSE_TK .

    $default  reduce using rule 91 (E)


state 12

   79 E: CDOUBLE .

    $default  reduce using rule 79 (E)


state 13

   85 E: CSTRING .

    $default  reduce using rule 85 (E)


state 14

   82 E: CINT .

    $default  reduce using rule 82 (E)


state 15

   38 CMD_IF: IF . '(' E ')' CMD
   39       | IF . '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 54


state 16

   80 E: '+' . CDOUBLE
   83  | '+' . CINT

    CDOUBLE  shift, and go to state 55
    CINT     shift, and go to state 56


state 17

   81 E: '-' . CDOUBLE
   84  | '-' . CINT

    CDOUBLE  shift, and go to state 57
    CINT     shift, and go to state 58


state 18

   87 E: '[' . ']'
   95  | '[' . LISTA_ELEMS ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59
    ']'       shift, and go to state 60

    LVALUEPROP   go to state 32
    E            go to state 61
    OBJ          go to state 62
    LISTA_ELEMS  go to state 63
    ELEM         go to state 64


state 19

   92 E: '(' . E ')'
   94  | '(' . OBJ ')'
  100  | '(' . PARENTESES_FUNCAO SETA EMPILHA_TS E
  101  | '(' . PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}'
  102  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA E
  103  | '(' . LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}'

    ID                 shift, and go to state 65
    FUNCTION           shift, and go to state 38
    TRUE_TK            shift, and go to state 10
    FALSE_TK           shift, and go to state 11
    CDOUBLE            shift, and go to state 12
    CSTRING            shift, and go to state 13
    CINT               shift, and go to state 14
    PARENTESES_FUNCAO  shift, and go to state 66
    '+'                shift, and go to state 16
    '-'                shift, and go to state 17
    '['                shift, and go to state 18
    '('                shift, and go to state 19
    '{'                shift, and go to state 59

    PARENTESES_FUNCAO  [reduce using rule 25 (LISTA_PARAMs)]

    LISTA_PARAMs  go to state 67
    PARAMs        go to state 68
    PARAM         go to state 69
    LVALUEPROP    go to state 32
    E             go to state 70
    OBJ           go to state 71


state 20

   16 CMD: '{' . EMPILHA_TS CMDs '}'
   86 E: '{' . '}'

    '}'  shift, and go to state 72

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 73


state 21

    0 $accept: S . $end

    $end  shift, and go to state 74


state 22

    1 S: CMDs .
    2 CMDs: CMDs . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    $default  reduce using rule 1 (S)

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 23

    3 CMDs: CMD .

    $default  reduce using rule 3 (CMDs)


state 24

    8 CMD: CMD_FUNC .

    $default  reduce using rule 8 (CMD)


state 25

    9 CMD: CMD_RET . ';'
   10    | CMD_RET . E ';'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 76
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 77


state 26

   13 CMD: CMD_WHILE .

    $default  reduce using rule 13 (CMD)


state 27

   14 CMD: CMD_FOR .

    $default  reduce using rule 14 (CMD)


state 28

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


state 29

    4 CMD: CMD_LET . ';'

    ';'  shift, and go to state 78


state 30

    5 CMD: CMD_VAR . ';'

    ';'  shift, and go to state 79


state 31

    6 CMD: CMD_CONST . ';'

    ';'  shift, and go to state 80


state 32

   63 E: LVALUEPROP . '=' E
   64  | LVALUEPROP . MAIS_IGUAL E
   65  | LVALUEPROP . MAIS_MAIS
   89  | LVALUEPROP .

    '='         shift, and go to state 81
    MAIS_IGUAL  shift, and go to state 82
    MAIS_MAIS   shift, and go to state 83

    $default  reduce using rule 89 (E)


state 33

   11 CMD: E . CMD_ASM ';'
   15    | E . ';'
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 84
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 101

    CMD_ASM  go to state 102


state 34

   59 E: ID '=' . E
   60  | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 103
    OBJ         go to state 104


state 35

   98 E: ID SETA . EMPILHA_TS E
   99  | ID SETA . EMPILHA_TS '{' CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 105


state 36

   61 E: ID MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 106


state 37

   62 E: ID MAIS_MAIS .

    $default  reduce using rule 62 (E)


state 38

   97 E: FUNCTION . $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 96 ($@2)

    $@2  go to state 53


state 39

   86 E: '{' . '}'

    '}'  shift, and go to state 72


state 40

   12 CMD: PRINT E . ';'
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 107


state 41

   32 CMD_FOR: FOR '(' . PRIM_E ';' E ';' E ')' E
   33        | FOR '(' . PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 1
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    PRIM_E      go to state 108
    CMD_LET     go to state 109
    CMD_VAR     go to state 110
    CMD_CONST   go to state 111
    LVALUEPROP  go to state 32
    E           go to state 112


state 42

   31 CMD_WHILE: WHILE '(' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 113


state 43

   49 VAR_LET: ID .
   50        | ID . '=' E
   51        | ID . '=' OBJ

    '='  shift, and go to state 114

    $default  reduce using rule 49 (VAR_LET)


state 44

   40 CMD_LET: LET VARs_LET .

    $default  reduce using rule 40 (CMD_LET)


state 45

   43 VARs_LET: VAR_LET . ',' VARs_LET
   44         | VAR_LET .

    ','  shift, and go to state 115

    $default  reduce using rule 44 (VARs_LET)


state 46

   52 VAR_VAR: ID .
   53        | ID . '=' E
   54        | ID . '=' OBJ

    '='  shift, and go to state 116

    $default  reduce using rule 52 (VAR_VAR)


state 47

   41 CMD_VAR: VAR VARs_VAR .

    $default  reduce using rule 41 (CMD_VAR)


state 48

   45 VARs_VAR: VAR_VAR . ',' VARs_VAR
   46         | VAR_VAR .

    ','  shift, and go to state 117

    $default  reduce using rule 46 (VARs_VAR)


state 49

   55 VAR_CONST: ID . '=' E
   56          | ID . '=' OBJ

    '='  shift, and go to state 118


state 50

   42 CMD_CONST: CONST VARs_CONST .

    $default  reduce using rule 42 (CMD_CONST)


state 51

   47 VARs_CONST: VAR_CONST . ',' VARs_CONST
   48           | VAR_CONST .

    ','  shift, and go to state 119

    $default  reduce using rule 48 (VARs_CONST)


state 52

   22 CMD_FUNC: FUNCTION ID . $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 21 ($@1)

    $@1  go to state 120


state 53

   97 E: FUNCTION $@2 . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 121


state 54

   38 CMD_IF: IF '(' . E ')' CMD
   39       | IF '(' . E ')' CMD ELSE CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 122


state 55

   80 E: '+' CDOUBLE .

    $default  reduce using rule 80 (E)


state 56

   83 E: '+' CINT .

    $default  reduce using rule 83 (E)


state 57

   81 E: '-' CDOUBLE .

    $default  reduce using rule 81 (E)


state 58

   84 E: '-' CINT .

    $default  reduce using rule 84 (E)


state 59

   86 E: '{' . '}'
  110 OBJ: '{' . LISTA_CAMPOS '}'

    ID   shift, and go to state 123
    '}'  shift, and go to state 72

    LISTA_CAMPOS  go to state 124
    CAMPO         go to state 125


state 60

   87 E: '[' ']' .

    $default  reduce using rule 87 (E)


state 61

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  117 ELEM: E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 117 (ELEM)


state 62

  118 ELEM: OBJ .

    $default  reduce using rule 118 (ELEM)


state 63

   95 E: '[' LISTA_ELEMS . ']'
  115 LISTA_ELEMS: LISTA_ELEMS . ',' ELEM

    ','  shift, and go to state 126
    ']'  shift, and go to state 127


state 64

  116 LISTA_ELEMS: ELEM .

    $default  reduce using rule 116 (LISTA_ELEMS)


state 65

   28 PARAM: ID .
   29      | ID . '=' E
   30      | ID . '=' OBJ
   59 E: ID . '=' E
   60  | ID . '=' OBJ
   61  | ID . MAIS_IGUAL E
   62  | ID . MAIS_MAIS
   88  | ID .
   98  | ID . SETA EMPILHA_TS E
   99  | ID . SETA EMPILHA_TS '{' CMDs '}'

    '='         shift, and go to state 128
    SETA        shift, and go to state 35
    MAIS_IGUAL  shift, and go to state 36
    MAIS_MAIS   shift, and go to state 37

    PARENTESES_FUNCAO  reduce using rule 28 (PARAM)
    ','                reduce using rule 28 (PARAM)
    $default           reduce using rule 88 (E)


state 66

  100 E: '(' PARENTESES_FUNCAO . SETA EMPILHA_TS E
  101  | '(' PARENTESES_FUNCAO . SETA '{' EMPILHA_TS CMDs '}'

    SETA  shift, and go to state 129


state 67

  102 E: '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA E
  103  | '(' LISTA_PARAMs . PARENTESES_FUNCAO SETA '{' CMDs '}'

    PARENTESES_FUNCAO  shift, and go to state 130


state 68

   24 LISTA_PARAMs: PARAMs .
   26 PARAMs: PARAMs . ',' PARAM

    ','  shift, and go to state 131

    $default  reduce using rule 24 (LISTA_PARAMs)


state 69

   27 PARAMs: PARAM . EMPILHA_TS

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 132


state 70

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   92  | '(' E . ')'
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 133


state 71

   94 E: '(' OBJ . ')'

    ')'  shift, and go to state 134


state 72

   86 E: '{' '}' .

    $default  reduce using rule 86 (E)


state 73

   16 CMD: '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 135
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 74

    0 $accept: S $end .

    $default  accept


state 75

    2 CMDs: CMDs CMD .

    $default  reduce using rule 2 (CMDs)


state 76

    9 CMD: CMD_RET ';' .

    $default  reduce using rule 9 (CMD)


state 77

   10 CMD: CMD_RET E . ';'
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 136


state 78

    4 CMD: CMD_LET ';' .

    $default  reduce using rule 4 (CMD)


state 79

    5 CMD: CMD_VAR ';' .

    $default  reduce using rule 5 (CMD)


state 80

    6 CMD: CMD_CONST ';' .

    $default  reduce using rule 6 (CMD)


state 81

   63 E: LVALUEPROP '=' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 137


state 82

   64 E: LVALUEPROP MAIS_IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 138


state 83

   65 E: LVALUEPROP MAIS_MAIS .

    $default  reduce using rule 65 (E)


state 84

   18 CMD_ASM: ASM . ASM_STRING '}'

    ASM_WORD  shift, and go to state 139

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 140


state 85

   66 E: E '<' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 141


state 86

   67 E: E '>' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 142


state 87

   73 E: E IGUAL . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 143


state 88

   72 E: E DIF . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 144


state 89

   71 E: E MA_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 145


state 90

   70 E: E ME_IG . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 146


state 91

   69 E: E OR . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 147


state 92

   68 E: E AND . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 148


state 93

   74 E: E '+' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 149


state 94

   75 E: E '-' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 150


state 95

   76 E: E '*' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 151


state 96

   77 E: E '/' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 152


state 97

   78 E: E '%' . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 153


state 98

   57 LVALUEPROP: E '[' . E ']'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 154


state 99

   93 E: E '(' . LISTA_ARGs ')'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    $default  reduce using rule 105 (LISTA_ARGs)

    LVALUEPROP  go to state 32
    E           go to state 155
    LISTA_ARGs  go to state 156
    ARGs        go to state 157
    ARG         go to state 158
    OBJ         go to state 159


state 100

   58 LVALUEPROP: E '.' . ID

    ID  shift, and go to state 160


state 101

   15 CMD: E ';' .

    $default  reduce using rule 15 (CMD)


state 102

   11 CMD: E CMD_ASM . ';'

    ';'  shift, and go to state 161


state 103

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   59 E: ID '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 59 (E)

    Conflict between rule 59 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 59 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 59 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 59 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 59 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 59 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 59 and token OR resolved as shift ('=' < OR).
    Conflict between rule 59 and token AND resolved as shift ('=' < AND).
    Conflict between rule 59 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 59 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 59 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 59 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 59 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 59 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 59 and token '.' resolved as shift ('=' < '.').


state 104

   60 E: ID '=' OBJ .

    $default  reduce using rule 60 (E)


state 105

   98 E: ID SETA EMPILHA_TS . E
   99  | ID SETA EMPILHA_TS . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 162

    LVALUEPROP  go to state 32
    E           go to state 163


state 106

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   61 E: ID MAIS_IGUAL E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 61 (E)

    Conflict between rule 61 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 61 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 61 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 61 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 61 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 61 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 61 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 61 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 61 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 61 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 61 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 61 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 61 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 61 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 61 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 61 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 107

   12 CMD: PRINT E ';' .

    $default  reduce using rule 12 (CMD)


state 108

   32 CMD_FOR: FOR '(' PRIM_E . ';' E ';' E ')' E
   33        | FOR '(' PRIM_E . ';' E ';' E ')' CMD

    ';'  shift, and go to state 164


state 109

   34 PRIM_E: CMD_LET .

    $default  reduce using rule 34 (PRIM_E)


state 110

   35 PRIM_E: CMD_VAR .

    $default  reduce using rule 35 (PRIM_E)


state 111

   36 PRIM_E: CMD_CONST .

    $default  reduce using rule 36 (PRIM_E)


state 112

   37 PRIM_E: E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 37 (PRIM_E)


state 113

   31 CMD_WHILE: WHILE '(' E . ')' CMD
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 165


state 114

   50 VAR_LET: ID '=' . E
   51        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 166
    OBJ         go to state 167


state 115

   43 VARs_LET: VAR_LET ',' . VARs_LET

    ID  shift, and go to state 43

    VARs_LET  go to state 168
    VAR_LET   go to state 45


state 116

   53 VAR_VAR: ID '=' . E
   54        | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 169
    OBJ         go to state 170


state 117

   45 VARs_VAR: VAR_VAR ',' . VARs_VAR

    ID  shift, and go to state 46

    VARs_VAR  go to state 171
    VAR_VAR   go to state 48


state 118

   55 VAR_CONST: ID '=' . E
   56          | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 172
    OBJ         go to state 173


state 119

   47 VARs_CONST: VAR_CONST ',' . VARs_CONST

    ID  shift, and go to state 49

    VARs_CONST  go to state 174
    VAR_CONST   go to state 51


state 120

   22 CMD_FUNC: FUNCTION ID $@1 . '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 175


state 121

   97 E: FUNCTION $@2 '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 176

    $default  reduce using rule 25 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 177
    PARAMs        go to state 68
    PARAM         go to state 69


state 122

   38 CMD_IF: IF '(' E . ')' CMD
   39       | IF '(' E . ')' CMD ELSE CMD
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 178


state 123

  113 CAMPO: ID . ':' E
  114      | ID . ':' OBJ

    ':'  shift, and go to state 179


state 124

  110 OBJ: '{' LISTA_CAMPOS . '}'
  111 LISTA_CAMPOS: LISTA_CAMPOS . ',' CAMPO

    '}'  shift, and go to state 180
    ','  shift, and go to state 181


state 125

  112 LISTA_CAMPOS: CAMPO .

    $default  reduce using rule 112 (LISTA_CAMPOS)


state 126

  115 LISTA_ELEMS: LISTA_ELEMS ',' . ELEM

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 61
    OBJ         go to state 62
    ELEM        go to state 182


state 127

   95 E: '[' LISTA_ELEMS ']' .

    $default  reduce using rule 95 (E)


state 128

   29 PARAM: ID '=' . E
   30      | ID '=' . OBJ
   59 E: ID '=' . E
   60  | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 183
    OBJ         go to state 184


state 129

  100 E: '(' PARENTESES_FUNCAO SETA . EMPILHA_TS E
  101  | '(' PARENTESES_FUNCAO SETA . '{' EMPILHA_TS CMDs '}'

    '{'  shift, and go to state 185

    '{'       [reduce using rule 17 (EMPILHA_TS)]
    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 186


state 130

  102 E: '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA E
  103  | '(' LISTA_PARAMs PARENTESES_FUNCAO . SETA '{' CMDs '}'

    SETA  shift, and go to state 187


state 131

   26 PARAMs: PARAMs ',' . PARAM

    ID  shift, and go to state 176

    PARAM  go to state 188


state 132

   27 PARAMs: PARAM EMPILHA_TS .

    $default  reduce using rule 27 (PARAMs)


state 133

   92 E: '(' E ')' .

    $default  reduce using rule 92 (E)


state 134

   94 E: '(' OBJ ')' .

    $default  reduce using rule 94 (E)


state 135

    2 CMDs: CMDs . CMD
   16 CMD: '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 189

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 136

   10 CMD: CMD_RET E ';' .

    $default  reduce using rule 10 (CMD)


state 137

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   63 E: LVALUEPROP '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 63 (E)

    Conflict between rule 63 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 63 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 63 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 63 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 63 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 63 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 63 and token OR resolved as shift ('=' < OR).
    Conflict between rule 63 and token AND resolved as shift ('=' < AND).
    Conflict between rule 63 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 63 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 63 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 63 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 63 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 63 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 63 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 63 and token '.' resolved as shift ('=' < '.').


state 138

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   64 E: LVALUEPROP MAIS_IGUAL E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 64 (E)

    Conflict between rule 64 and token '<' resolved as shift (MAIS_IGUAL < '<').
    Conflict between rule 64 and token '>' resolved as shift (MAIS_IGUAL < '>').
    Conflict between rule 64 and token IGUAL resolved as shift (MAIS_IGUAL < IGUAL).
    Conflict between rule 64 and token DIF resolved as shift (MAIS_IGUAL < DIF).
    Conflict between rule 64 and token MA_IG resolved as shift (MAIS_IGUAL < MA_IG).
    Conflict between rule 64 and token ME_IG resolved as shift (MAIS_IGUAL < ME_IG).
    Conflict between rule 64 and token OR resolved as shift (MAIS_IGUAL < OR).
    Conflict between rule 64 and token AND resolved as shift (MAIS_IGUAL < AND).
    Conflict between rule 64 and token '+' resolved as shift (MAIS_IGUAL < '+').
    Conflict between rule 64 and token '-' resolved as shift (MAIS_IGUAL < '-').
    Conflict between rule 64 and token '*' resolved as shift (MAIS_IGUAL < '*').
    Conflict between rule 64 and token '/' resolved as shift (MAIS_IGUAL < '/').
    Conflict between rule 64 and token '%' resolved as shift (MAIS_IGUAL < '%').
    Conflict between rule 64 and token '[' resolved as shift (MAIS_IGUAL < '[').
    Conflict between rule 64 and token '(' resolved as shift (MAIS_IGUAL < '(').
    Conflict between rule 64 and token '.' resolved as shift (MAIS_IGUAL < '.').


state 139

   19 ASM_STRING: ASM_WORD . ASM_STRING

    ASM_WORD  shift, and go to state 139

    $default  reduce using rule 20 (ASM_STRING)

    ASM_STRING  go to state 190


state 140

   18 CMD_ASM: ASM ASM_STRING . '}'

    '}'  shift, and go to state 191


state 141

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   66  | E '<' E .
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 66 (E)

    Conflict between rule 66 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 66 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 66 and token IGUAL resolved as shift ('<' < IGUAL).
    Conflict between rule 66 and token DIF resolved as shift ('<' < DIF).
    Conflict between rule 66 and token MA_IG resolved as shift ('<' < MA_IG).
    Conflict between rule 66 and token ME_IG resolved as shift ('<' < ME_IG).
    Conflict between rule 66 and token OR resolved as shift ('<' < OR).
    Conflict between rule 66 and token AND resolved as shift ('<' < AND).
    Conflict between rule 66 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 66 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 66 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 66 and token '[' resolved as shift ('<' < '[').
    Conflict between rule 66 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 66 and token '.' resolved as shift ('<' < '.').


state 142

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   67  | E '>' E .
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 67 (E)

    Conflict between rule 67 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 67 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 67 and token IGUAL resolved as shift ('>' < IGUAL).
    Conflict between rule 67 and token DIF resolved as shift ('>' < DIF).
    Conflict between rule 67 and token MA_IG resolved as shift ('>' < MA_IG).
    Conflict between rule 67 and token ME_IG resolved as shift ('>' < ME_IG).
    Conflict between rule 67 and token OR resolved as shift ('>' < OR).
    Conflict between rule 67 and token AND resolved as shift ('>' < AND).
    Conflict between rule 67 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 67 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 67 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 67 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 67 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 67 and token '[' resolved as shift ('>' < '[').
    Conflict between rule 67 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 67 and token '.' resolved as shift ('>' < '.').


state 143

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   73  | E IGUAL E .
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 73 (E)

    Conflict between rule 73 and token '<' resolved as reduce ('<' < IGUAL).
    Conflict between rule 73 and token '>' resolved as reduce ('>' < IGUAL).
    Conflict between rule 73 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 73 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 73 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 73 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 73 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 73 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 73 and token '+' resolved as shift (IGUAL < '+').
    Conflict between rule 73 and token '-' resolved as shift (IGUAL < '-').
    Conflict between rule 73 and token '*' resolved as shift (IGUAL < '*').
    Conflict between rule 73 and token '/' resolved as shift (IGUAL < '/').
    Conflict between rule 73 and token '%' resolved as shift (IGUAL < '%').
    Conflict between rule 73 and token '[' resolved as shift (IGUAL < '[').
    Conflict between rule 73 and token '(' resolved as shift (IGUAL < '(').
    Conflict between rule 73 and token '.' resolved as shift (IGUAL < '.').


state 144

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   72  | E DIF E .
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 72 (E)

    Conflict between rule 72 and token '<' resolved as reduce ('<' < DIF).
    Conflict between rule 72 and token '>' resolved as reduce ('>' < DIF).
    Conflict between rule 72 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 72 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 72 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 72 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 72 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 72 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 72 and token '+' resolved as shift (DIF < '+').
    Conflict between rule 72 and token '-' resolved as shift (DIF < '-').
    Conflict between rule 72 and token '*' resolved as shift (DIF < '*').
    Conflict between rule 72 and token '/' resolved as shift (DIF < '/').
    Conflict between rule 72 and token '%' resolved as shift (DIF < '%').
    Conflict between rule 72 and token '[' resolved as shift (DIF < '[').
    Conflict between rule 72 and token '(' resolved as shift (DIF < '(').
    Conflict between rule 72 and token '.' resolved as shift (DIF < '.').


state 145

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   71  | E MA_IG E .
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 71 (E)

    Conflict between rule 71 and token '<' resolved as reduce ('<' < MA_IG).
    Conflict between rule 71 and token '>' resolved as reduce ('>' < MA_IG).
    Conflict between rule 71 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 71 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 71 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 71 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 71 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 71 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 71 and token '+' resolved as shift (MA_IG < '+').
    Conflict between rule 71 and token '-' resolved as shift (MA_IG < '-').
    Conflict between rule 71 and token '*' resolved as shift (MA_IG < '*').
    Conflict between rule 71 and token '/' resolved as shift (MA_IG < '/').
    Conflict between rule 71 and token '%' resolved as shift (MA_IG < '%').
    Conflict between rule 71 and token '[' resolved as shift (MA_IG < '[').
    Conflict between rule 71 and token '(' resolved as shift (MA_IG < '(').
    Conflict between rule 71 and token '.' resolved as shift (MA_IG < '.').


state 146

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   70  | E ME_IG E .
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 70 (E)

    Conflict between rule 70 and token '<' resolved as reduce ('<' < ME_IG).
    Conflict between rule 70 and token '>' resolved as reduce ('>' < ME_IG).
    Conflict between rule 70 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 70 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 70 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 70 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 70 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 70 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 70 and token '+' resolved as shift (ME_IG < '+').
    Conflict between rule 70 and token '-' resolved as shift (ME_IG < '-').
    Conflict between rule 70 and token '*' resolved as shift (ME_IG < '*').
    Conflict between rule 70 and token '/' resolved as shift (ME_IG < '/').
    Conflict between rule 70 and token '%' resolved as shift (ME_IG < '%').
    Conflict between rule 70 and token '[' resolved as shift (ME_IG < '[').
    Conflict between rule 70 and token '(' resolved as shift (ME_IG < '(').
    Conflict between rule 70 and token '.' resolved as shift (ME_IG < '.').


state 147

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   69  | E OR E .
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 69 (E)

    Conflict between rule 69 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 69 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 69 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 69 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 69 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 69 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 69 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 69 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 69 and token '+' resolved as shift (OR < '+').
    Conflict between rule 69 and token '-' resolved as shift (OR < '-').
    Conflict between rule 69 and token '*' resolved as shift (OR < '*').
    Conflict between rule 69 and token '/' resolved as shift (OR < '/').
    Conflict between rule 69 and token '%' resolved as shift (OR < '%').
    Conflict between rule 69 and token '[' resolved as shift (OR < '[').
    Conflict between rule 69 and token '(' resolved as shift (OR < '(').
    Conflict between rule 69 and token '.' resolved as shift (OR < '.').


state 148

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   68  | E AND E .
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '+'  shift, and go to state 93
    '-'  shift, and go to state 94
    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    IGUAL  error (nonassociative)
    DIF    error (nonassociative)
    MA_IG  error (nonassociative)
    ME_IG  error (nonassociative)
    OR     error (nonassociative)
    AND    error (nonassociative)

    $default  reduce using rule 68 (E)

    Conflict between rule 68 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 68 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 68 and token IGUAL resolved as an error (%nonassoc IGUAL).
    Conflict between rule 68 and token DIF resolved as an error (%nonassoc DIF).
    Conflict between rule 68 and token MA_IG resolved as an error (%nonassoc MA_IG).
    Conflict between rule 68 and token ME_IG resolved as an error (%nonassoc ME_IG).
    Conflict between rule 68 and token OR resolved as an error (%nonassoc OR).
    Conflict between rule 68 and token AND resolved as an error (%nonassoc AND).
    Conflict between rule 68 and token '+' resolved as shift (AND < '+').
    Conflict between rule 68 and token '-' resolved as shift (AND < '-').
    Conflict between rule 68 and token '*' resolved as shift (AND < '*').
    Conflict between rule 68 and token '/' resolved as shift (AND < '/').
    Conflict between rule 68 and token '%' resolved as shift (AND < '%').
    Conflict between rule 68 and token '[' resolved as shift (AND < '[').
    Conflict between rule 68 and token '(' resolved as shift (AND < '(').
    Conflict between rule 68 and token '.' resolved as shift (AND < '.').


state 149

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   74  | E '+' E .
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 74 (E)

    Conflict between rule 74 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 74 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 74 and token IGUAL resolved as reduce (IGUAL < '+').
    Conflict between rule 74 and token DIF resolved as reduce (DIF < '+').
    Conflict between rule 74 and token MA_IG resolved as reduce (MA_IG < '+').
    Conflict between rule 74 and token ME_IG resolved as reduce (ME_IG < '+').
    Conflict between rule 74 and token OR resolved as reduce (OR < '+').
    Conflict between rule 74 and token AND resolved as reduce (AND < '+').
    Conflict between rule 74 and token '+' resolved as reduce (%left '+').
    Conflict between rule 74 and token '-' resolved as reduce (%left '-').
    Conflict between rule 74 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 74 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 74 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 74 and token '[' resolved as shift ('+' < '[').
    Conflict between rule 74 and token '(' resolved as shift ('+' < '(').
    Conflict between rule 74 and token '.' resolved as shift ('+' < '.').


state 150

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   75  | E '-' E .
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 75 (E)

    Conflict between rule 75 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 75 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 75 and token IGUAL resolved as reduce (IGUAL < '-').
    Conflict between rule 75 and token DIF resolved as reduce (DIF < '-').
    Conflict between rule 75 and token MA_IG resolved as reduce (MA_IG < '-').
    Conflict between rule 75 and token ME_IG resolved as reduce (ME_IG < '-').
    Conflict between rule 75 and token OR resolved as reduce (OR < '-').
    Conflict between rule 75 and token AND resolved as reduce (AND < '-').
    Conflict between rule 75 and token '+' resolved as reduce (%left '+').
    Conflict between rule 75 and token '-' resolved as reduce (%left '-').
    Conflict between rule 75 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 75 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 75 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 75 and token '[' resolved as shift ('-' < '[').
    Conflict between rule 75 and token '(' resolved as shift ('-' < '(').
    Conflict between rule 75 and token '.' resolved as shift ('-' < '.').


state 151

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   76  | E '*' E .
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 76 (E)

    Conflict between rule 76 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 76 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 76 and token IGUAL resolved as reduce (IGUAL < '*').
    Conflict between rule 76 and token DIF resolved as reduce (DIF < '*').
    Conflict between rule 76 and token MA_IG resolved as reduce (MA_IG < '*').
    Conflict between rule 76 and token ME_IG resolved as reduce (ME_IG < '*').
    Conflict between rule 76 and token OR resolved as reduce (OR < '*').
    Conflict between rule 76 and token AND resolved as reduce (AND < '*').
    Conflict between rule 76 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 76 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 76 and token '*' resolved as reduce (%left '*').
    Conflict between rule 76 and token '/' resolved as reduce (%left '/').
    Conflict between rule 76 and token '%' resolved as reduce (%left '%').
    Conflict between rule 76 and token '[' resolved as shift ('*' < '[').
    Conflict between rule 76 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 76 and token '.' resolved as shift ('*' < '.').


state 152

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   77  | E '/' E .
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 77 (E)

    Conflict between rule 77 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 77 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 77 and token IGUAL resolved as reduce (IGUAL < '/').
    Conflict between rule 77 and token DIF resolved as reduce (DIF < '/').
    Conflict between rule 77 and token MA_IG resolved as reduce (MA_IG < '/').
    Conflict between rule 77 and token ME_IG resolved as reduce (ME_IG < '/').
    Conflict between rule 77 and token OR resolved as reduce (OR < '/').
    Conflict between rule 77 and token AND resolved as reduce (AND < '/').
    Conflict between rule 77 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 77 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 77 and token '*' resolved as reduce (%left '*').
    Conflict between rule 77 and token '/' resolved as reduce (%left '/').
    Conflict between rule 77 and token '%' resolved as reduce (%left '%').
    Conflict between rule 77 and token '[' resolved as shift ('/' < '[').
    Conflict between rule 77 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 77 and token '.' resolved as shift ('/' < '.').


state 153

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   78  | E '%' E .
   93  | E . '(' LISTA_ARGs ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99
    '.'  shift, and go to state 100

    $default  reduce using rule 78 (E)

    Conflict between rule 78 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 78 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 78 and token IGUAL resolved as reduce (IGUAL < '%').
    Conflict between rule 78 and token DIF resolved as reduce (DIF < '%').
    Conflict between rule 78 and token MA_IG resolved as reduce (MA_IG < '%').
    Conflict between rule 78 and token ME_IG resolved as reduce (ME_IG < '%').
    Conflict between rule 78 and token OR resolved as reduce (OR < '%').
    Conflict between rule 78 and token AND resolved as reduce (AND < '%').
    Conflict between rule 78 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 78 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 78 and token '*' resolved as reduce (%left '*').
    Conflict between rule 78 and token '/' resolved as reduce (%left '/').
    Conflict between rule 78 and token '%' resolved as reduce (%left '%').
    Conflict between rule 78 and token '[' resolved as shift ('%' < '[').
    Conflict between rule 78 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 78 and token '.' resolved as shift ('%' < '.').


state 154

   57 LVALUEPROP: E . '[' E ']'
   57           | E '[' E . ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ']'    shift, and go to state 192


state 155

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  108 ARG: E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 108 (ARG)


state 156

   93 E: E '(' LISTA_ARGs . ')'

    ')'  shift, and go to state 193


state 157

  104 LISTA_ARGs: ARGs .
  106 ARGs: ARGs . ',' ARG

    ','  shift, and go to state 194

    $default  reduce using rule 104 (LISTA_ARGs)


state 158

  107 ARGs: ARG .

    $default  reduce using rule 107 (ARGs)


state 159

  109 ARG: OBJ .

    $default  reduce using rule 109 (ARG)


state 160

   58 LVALUEPROP: E '.' ID .

    $default  reduce using rule 58 (LVALUEPROP)


state 161

   11 CMD: E CMD_ASM ';' .

    $default  reduce using rule 11 (CMD)


state 162

   86 E: '{' . '}'
   99  | ID SETA EMPILHA_TS '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 72

    CMDs        go to state 195
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 163

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
   98  | ID SETA EMPILHA_TS E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 98 (E)

    Conflict between rule 98 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 98 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 98 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 98 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 98 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 98 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 98 and token OR resolved as shift (SETA < OR).
    Conflict between rule 98 and token AND resolved as shift (SETA < AND).
    Conflict between rule 98 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 98 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 98 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 98 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 98 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 98 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 98 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 98 and token '.' resolved as shift (SETA < '.').


state 164

   32 CMD_FOR: FOR '(' PRIM_E ';' . E ';' E ')' E
   33        | FOR '(' PRIM_E ';' . E ';' E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 196


state 165

   31 CMD_WHILE: WHILE '(' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 197
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 166

   50 VAR_LET: ID '=' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 50 (VAR_LET)


state 167

   51 VAR_LET: ID '=' OBJ .

    $default  reduce using rule 51 (VAR_LET)


state 168

   43 VARs_LET: VAR_LET ',' VARs_LET .

    $default  reduce using rule 43 (VARs_LET)


state 169

   53 VAR_VAR: ID '=' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 53 (VAR_VAR)


state 170

   54 VAR_VAR: ID '=' OBJ .

    $default  reduce using rule 54 (VAR_VAR)


state 171

   45 VARs_VAR: VAR_VAR ',' VARs_VAR .

    $default  reduce using rule 45 (VARs_VAR)


state 172

   55 VAR_CONST: ID '=' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 55 (VAR_CONST)


state 173

   56 VAR_CONST: ID '=' OBJ .

    $default  reduce using rule 56 (VAR_CONST)


state 174

   47 VARs_CONST: VAR_CONST ',' VARs_CONST .

    $default  reduce using rule 47 (VARs_CONST)


state 175

   22 CMD_FUNC: FUNCTION ID $@1 '(' . LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 176

    $default  reduce using rule 25 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 198
    PARAMs        go to state 68
    PARAM         go to state 69


state 176

   28 PARAM: ID .
   29      | ID . '=' E
   30      | ID . '=' OBJ

    '='  shift, and go to state 199

    $default  reduce using rule 28 (PARAM)


state 177

   97 E: FUNCTION $@2 '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 200


state 178

   38 CMD_IF: IF '(' E ')' . CMD
   39       | IF '(' E ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 201
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 179

  113 CAMPO: ID ':' . E
  114      | ID ':' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 202
    OBJ         go to state 203


state 180

  110 OBJ: '{' LISTA_CAMPOS '}' .

    $default  reduce using rule 110 (OBJ)


state 181

  111 LISTA_CAMPOS: LISTA_CAMPOS ',' . CAMPO

    ID  shift, and go to state 123

    CAMPO  go to state 204


state 182

  115 LISTA_ELEMS: LISTA_ELEMS ',' ELEM .

    $default  reduce using rule 115 (LISTA_ELEMS)


state 183

   29 PARAM: ID '=' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   59 E: ID '=' E .
   66  | E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    ')'       reduce using rule 59 (E)
    $default  reduce using rule 29 (PARAM)

    Conflict between rule 59 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 59 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 59 and token IGUAL resolved as shift ('=' < IGUAL).
    Conflict between rule 59 and token DIF resolved as shift ('=' < DIF).
    Conflict between rule 59 and token MA_IG resolved as shift ('=' < MA_IG).
    Conflict between rule 59 and token ME_IG resolved as shift ('=' < ME_IG).
    Conflict between rule 59 and token OR resolved as shift ('=' < OR).
    Conflict between rule 59 and token AND resolved as shift ('=' < AND).
    Conflict between rule 59 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 59 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 59 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 59 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 59 and token '[' resolved as shift ('=' < '[').
    Conflict between rule 59 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 59 and token '.' resolved as shift ('=' < '.').


state 184

   30 PARAM: ID '=' OBJ .
   60 E: ID '=' OBJ .

    PARENTESES_FUNCAO  reduce using rule 30 (PARAM)
    ','                reduce using rule 30 (PARAM)
    $default           reduce using rule 60 (E)


state 185

  101 E: '(' PARENTESES_FUNCAO SETA '{' . EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 205


state 186

  100 E: '(' PARENTESES_FUNCAO SETA EMPILHA_TS . E

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 206


state 187

  102 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . E
  103  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA . '{' CMDs '}'

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 207

    LVALUEPROP  go to state 32
    E           go to state 208


state 188

   26 PARAMs: PARAMs ',' PARAM .

    $default  reduce using rule 26 (PARAMs)


state 189

   16 CMD: '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 16 (CMD)


state 190

   19 ASM_STRING: ASM_WORD ASM_STRING .

    $default  reduce using rule 19 (ASM_STRING)


state 191

   18 CMD_ASM: ASM ASM_STRING '}' .

    $default  reduce using rule 18 (CMD_ASM)


state 192

   57 LVALUEPROP: E '[' E ']' .

    $default  reduce using rule 57 (LVALUEPROP)


state 193

   93 E: E '(' LISTA_ARGs ')' .

    $default  reduce using rule 93 (E)


state 194

  106 ARGs: ARGs ',' . ARG

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 155
    ARG         go to state 209
    OBJ         go to state 159


state 195

    2 CMDs: CMDs . CMD
   99 E: ID SETA EMPILHA_TS '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 210

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 196

   32 CMD_FOR: FOR '(' PRIM_E ';' E . ';' E ')' E
   33        | FOR '(' PRIM_E ';' E . ';' E ')' CMD
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 211


state 197

   31 CMD_WHILE: WHILE '(' E ')' CMD .

    $default  reduce using rule 31 (CMD_WHILE)


state 198

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 212


state 199

   29 PARAM: ID '=' . E
   30      | ID '=' . OBJ

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 59

    LVALUEPROP  go to state 32
    E           go to state 213
    OBJ         go to state 214


state 200

   97 E: FUNCTION $@2 '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 215


state 201

   38 CMD_IF: IF '(' E ')' CMD .
   39       | IF '(' E ')' CMD . ELSE CMD

    ELSE  shift, and go to state 216

    $default  reduce using rule 38 (CMD_IF)

    Conflict between rule 38 and token ELSE resolved as shift (REDUCE < ELSE).


state 202

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  113 CAMPO: ID ':' E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 113 (CAMPO)


state 203

  114 CAMPO: ID ':' OBJ .

    $default  reduce using rule 114 (CAMPO)


state 204

  111 LISTA_CAMPOS: LISTA_CAMPOS ',' CAMPO .

    $default  reduce using rule 111 (LISTA_CAMPOS)


state 205

  101 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 217
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 206

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  100  | '(' PARENTESES_FUNCAO SETA EMPILHA_TS E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 100 (E)

    Conflict between rule 100 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 100 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 100 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 100 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 100 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 100 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 100 and token OR resolved as shift (SETA < OR).
    Conflict between rule 100 and token AND resolved as shift (SETA < AND).
    Conflict between rule 100 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 100 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 100 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 100 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 100 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 100 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 100 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 100 and token '.' resolved as shift (SETA < '.').


state 207

   86 E: '{' . '}'
  103  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 72

    CMDs        go to state 218
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 208

   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'
  102  | '(' LISTA_PARAMs PARENTESES_FUNCAO SETA E .

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 102 (E)

    Conflict between rule 102 and token '<' resolved as shift (SETA < '<').
    Conflict between rule 102 and token '>' resolved as shift (SETA < '>').
    Conflict between rule 102 and token IGUAL resolved as shift (SETA < IGUAL).
    Conflict between rule 102 and token DIF resolved as shift (SETA < DIF).
    Conflict between rule 102 and token MA_IG resolved as shift (SETA < MA_IG).
    Conflict between rule 102 and token ME_IG resolved as shift (SETA < ME_IG).
    Conflict between rule 102 and token OR resolved as shift (SETA < OR).
    Conflict between rule 102 and token AND resolved as shift (SETA < AND).
    Conflict between rule 102 and token '+' resolved as shift (SETA < '+').
    Conflict between rule 102 and token '-' resolved as shift (SETA < '-').
    Conflict between rule 102 and token '*' resolved as shift (SETA < '*').
    Conflict between rule 102 and token '/' resolved as shift (SETA < '/').
    Conflict between rule 102 and token '%' resolved as shift (SETA < '%').
    Conflict between rule 102 and token '[' resolved as shift (SETA < '[').
    Conflict between rule 102 and token '(' resolved as shift (SETA < '(').
    Conflict between rule 102 and token '.' resolved as shift (SETA < '.').


state 209

  106 ARGs: ARGs ',' ARG .

    $default  reduce using rule 106 (ARGs)


state 210

   99 E: ID SETA EMPILHA_TS '{' CMDs '}' .

    $default  reduce using rule 99 (E)


state 211

   32 CMD_FOR: FOR '(' PRIM_E ';' E ';' . E ')' E
   33        | FOR '(' PRIM_E ';' E ';' . E ')' CMD

    ID        shift, and go to state 1
    FUNCTION  shift, and go to state 38
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 39

    LVALUEPROP  go to state 32
    E           go to state 219


state 212

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 220


state 213

   29 PARAM: ID '=' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100

    $default  reduce using rule 29 (PARAM)


state 214

   30 PARAM: ID '=' OBJ .

    $default  reduce using rule 30 (PARAM)


state 215

   97 E: FUNCTION $@2 '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 221
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 216

   39 CMD_IF: IF '(' E ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 222
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 217

    2 CMDs: CMDs . CMD
  101 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 223

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 218

    2 CMDs: CMDs . CMD
  103 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 224

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 219

   32 CMD_FOR: FOR '(' PRIM_E ';' E ';' E . ')' E
   33        | FOR '(' PRIM_E ';' E ';' E . ')' CMD
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ')'    shift, and go to state 225


state 220

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' . CMDs '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMDs        go to state 226
    CMD         go to state 23
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 221

    2 CMDs: CMDs . CMD
   97 E: FUNCTION $@2 '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 227

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 222

   39 CMD_IF: IF '(' E ')' CMD ELSE CMD .

    $default  reduce using rule 39 (CMD_IF)


state 223

  101 E: '(' PARENTESES_FUNCAO SETA '{' EMPILHA_TS CMDs '}' .

    $default  reduce using rule 101 (E)


state 224

  103 E: '(' LISTA_PARAMs PARENTESES_FUNCAO SETA '{' CMDs '}' .

    $default  reduce using rule 103 (E)


state 225

   32 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' . E
   33        | FOR '(' PRIM_E ';' E ';' E ')' . CMD

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20

    CMD         go to state 228
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 229


state 226

    2 CMDs: CMDs . CMD
   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs . '}'

    ID        shift, and go to state 1
    PRINT     shift, and go to state 2
    FOR       shift, and go to state 3
    WHILE     shift, and go to state 4
    LET       shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    FUNCTION  shift, and go to state 8
    RETURN    shift, and go to state 9
    TRUE_TK   shift, and go to state 10
    FALSE_TK  shift, and go to state 11
    CDOUBLE   shift, and go to state 12
    CSTRING   shift, and go to state 13
    CINT      shift, and go to state 14
    IF        shift, and go to state 15
    '+'       shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 20
    '}'       shift, and go to state 230

    CMD         go to state 75
    CMD_FUNC    go to state 24
    CMD_RET     go to state 25
    CMD_WHILE   go to state 26
    CMD_FOR     go to state 27
    CMD_IF      go to state 28
    CMD_LET     go to state 29
    CMD_VAR     go to state 30
    CMD_CONST   go to state 31
    LVALUEPROP  go to state 32
    E           go to state 33


state 227

   97 E: FUNCTION $@2 '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 97 (E)


state 228

   33 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD .

    $default  reduce using rule 33 (CMD_FOR)


state 229

   11 CMD: E . CMD_ASM ';'
   15    | E . ';'
   32 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' E .
   57 LVALUEPROP: E . '[' E ']'
   58           | E . '.' ID
   66 E: E . '<' E
   67  | E . '>' E
   68  | E . AND E
   69  | E . OR E
   70  | E . ME_IG E
   71  | E . MA_IG E
   72  | E . DIF E
   73  | E . IGUAL E
   74  | E . '+' E
   75  | E . '-' E
   76  | E . '*' E
   77  | E . '/' E
   78  | E . '%' E
   93  | E . '(' LISTA_ARGs ')'

    ASM    shift, and go to state 84
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86
    IGUAL  shift, and go to state 87
    DIF    shift, and go to state 88
    MA_IG  shift, and go to state 89
    ME_IG  shift, and go to state 90
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    '+'    shift, and go to state 93
    '-'    shift, and go to state 94
    '*'    shift, and go to state 95
    '/'    shift, and go to state 96
    '%'    shift, and go to state 97
    '['    shift, and go to state 98
    '('    shift, and go to state 99
    '.'    shift, and go to state 100
    ';'    shift, and go to state 101

    '+'       [reduce using rule 32 (CMD_FOR)]
    '-'       [reduce using rule 32 (CMD_FOR)]
    '['       [reduce using rule 32 (CMD_FOR)]
    '('       [reduce using rule 32 (CMD_FOR)]
    $default  reduce using rule 32 (CMD_FOR)

    CMD_ASM  go to state 102


state 230

   22 CMD_FUNC: FUNCTION ID $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 22 (CMD_FUNC)
